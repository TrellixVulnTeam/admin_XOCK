{"ast":null,"code":"var _jsxFileName = \"/Users/we/dev/cp-dev/src/components/molecules/layout/InfiniteLanding.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Infinite from './Infinite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfiniteLanding = () => {\n  _s();\n\n  const [listInfo, setListInfo] = useState([]);\n  const [skip, setSkip] = useState(0);\n  const [count, setcount] = useState(10);\n  const [fetching, setFetching] = useState(false);\n  useEffect(() => {\n    const body = {\n      skip: skip,\n      count: count\n    };\n    getData(body);\n  }, []);\n\n  const getData = body => {\n    let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc';\n    axios.get(\"http://52.78.173.151/boards\", {\n      \"x-api-key\": key\n    }, body).then(res => {\n      if (body.loadMore) setListInfo([...listInfo, ...res.data.listInfo]);else setListInfo(res.data.listInfo);\n    }).catch(err => alert(\"글을 가져오는데 실패 했습니다.\"));\n  };\n\n  const fetchMoreData = () => {\n    setFetching(true);\n    let tmpSkip = skip + count;\n    let body = {\n      skip: tmpSkip,\n      count: count,\n      loadMore: true\n    };\n    getData(body);\n    setSkip(tmpSkip);\n    setFetching(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TITLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Infinite, {\n      posts: listInfo,\n      fetchMoreData: fetchMoreData,\n      fetching: fetching\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n\n_s(InfiniteLanding, \"ux1ZTVrIYr7UynVqqN+VrNLUEJw=\");\n\n_c = InfiniteLanding;\nexport default InfiniteLanding;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfiniteLanding\");","map":{"version":3,"sources":["/Users/we/dev/cp-dev/src/components/molecules/layout/InfiniteLanding.js"],"names":["React","useState","useEffect","axios","Infinite","InfiniteLanding","listInfo","setListInfo","skip","setSkip","count","setcount","fetching","setFetching","body","getData","key","get","then","res","loadMore","data","catch","err","alert","fetchMoreData","tmpSkip"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,eAAe,GAAE,MAAM;AAAA;;AAE3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMY,IAAI,GAAG;AACXN,MAAAA,IAAI,EAAEA,IADK;AAEXE,MAAAA,KAAK,EAAEA;AAFI,KAAb;AAIAK,IAAAA,OAAO,CAACD,IAAD,CAAP;AACC,GAPM,EAOJ,EAPI,CAAT;;AASA,QAAMC,OAAO,GAAID,IAAD,IAAU;AACxB,QAAIE,GAAG,GAAG,0CAAV;AACAb,IAAAA,KAAK,CAACc,GAAN,CAAU,6BAAV,EAAyC;AACvC,mBAAaD;AAD0B,KAAzC,EAEKF,IAFL,EAGGI,IAHH,CAGSC,GAAG,IAAI;AACX,UAAGL,IAAI,CAACM,QAAR,EAAkBb,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc,GAAGa,GAAG,CAACE,IAAJ,CAASf,QAA1B,CAAD,CAAX,CAAlB,KACKC,WAAW,CAACY,GAAG,CAACE,IAAJ,CAASf,QAAV,CAAX;AACF,KANR,EAOGgB,KAPH,CAOSC,GAAG,IAAIC,KAAK,CAAC,mBAAD,CAPrB;AAQD,GAVD;;AAYA,QAAMC,aAAa,GAAG,MAAM;AAC1BZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,QAAIa,OAAO,GAAGlB,IAAI,GAAGE,KAArB;AACA,QAAII,IAAI,GAAG;AACTN,MAAAA,IAAI,EAAEkB,OADG;AAEHhB,MAAAA,KAAK,EAAEA,KAFJ;AAGHU,MAAAA,QAAQ,EAAE;AAHP,KAAX;AAMIL,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAL,IAAAA,OAAO,CAACiB,OAAD,CAAP;AACAb,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAZH;;AAeE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEP,QAAjB;AAA2B,MAAA,aAAa,EAAEmB,aAA1C;AAAyD,MAAA,QAAQ,EAAEb;AAAnE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH,CAjDD;;GAAMP,e;;KAAAA,e;AAmDN,eAAeA,eAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport Infinite from './Infinite'\n\nconst InfiniteLanding= () => {\n\n  const [listInfo, setListInfo] = useState([]);\n  const [skip, setSkip] = useState(0);\n  const [count, setcount] = useState(10);\n  const [fetching, setFetching] = useState(false);\n\n  useEffect(() => {\n\n    const body = {\n      skip: skip,\n      count: count,\n    };\n    getData(body)\n    }, [])\n\n  const getData = (body) => {\n    let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n    axios.get(\"http://52.78.173.151/boards\", {\n      \"x-api-key\": key,\n      }, body)\n      .then( res => {\n         if(body.loadMore) setListInfo([...listInfo, ...res.data.listInfo]);\n         else setListInfo(res.data.listInfo)\n           })\n      .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n  }\n  \n  const fetchMoreData = () => {\n    setFetching(true);\n    let tmpSkip = skip + count\n    let body = {\n      skip: tmpSkip,\n            count: count,\n            loadMore: true\n        };\n\n        getData(body);\n        setSkip(tmpSkip);\n        setFetching(false);\n    }\n\n\n    return (\n      <div>\n        <h2>TITLE</h2>\n        <Infinite posts={listInfo} fetchMoreData={fetchMoreData} fetching={fetching}/>\n      </div>\n    )\n}\n\nexport default InfiniteLanding"]},"metadata":{},"sourceType":"module"}