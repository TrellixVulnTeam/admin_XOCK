[{"/Users/juri/Documents/cp-dev/src/index.js":"1","/Users/juri/Documents/cp-dev/src/reportWebVitals.js":"2","/Users/juri/Documents/cp-dev/src/App.js":"3","/Users/juri/Documents/cp-dev/src/page/boradNotice/NoticeDescContainer.js":"4","/Users/juri/Documents/cp-dev/src/page/boradNotice/NoticeListContainer.js":"5","/Users/juri/Documents/cp-dev/src/page/main/MainContainer.js":"6","/Users/juri/Documents/cp-dev/src/page/main/utils/Constants.js":"7","/Users/juri/Documents/cp-dev/src/components/molecules/layout/card/Card.js":"8","/Users/juri/Documents/cp-dev/src/components/molecules/layout/layoutHeader/Header.js":"9"},{"size":500,"mtime":1615823190000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1615823190000,"results":"12","hashOfConfig":"11"},{"size":701,"mtime":1616260638000,"results":"13","hashOfConfig":"11"},{"size":1978,"mtime":1616262468000,"results":"14","hashOfConfig":"11"},{"size":2385,"mtime":1616259892000,"results":"15","hashOfConfig":"11"},{"size":5836,"mtime":1616244611000,"results":"16","hashOfConfig":"11"},{"size":65,"mtime":1615945864000,"results":"17","hashOfConfig":"11"},{"size":1299,"mtime":1616244608000,"results":"18","hashOfConfig":"11"},{"size":697,"mtime":1616262829000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1eblkak",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/juri/Documents/cp-dev/src/index.js",[],["43","44"],"/Users/juri/Documents/cp-dev/src/reportWebVitals.js",[],"/Users/juri/Documents/cp-dev/src/App.js",["45","46"],"import React, { useState } from 'react';\nimport {Route, BrowserRouter, Switch as Router } from \"react-router-dom\"\nimport './styles/style.scss';\nimport MainContainer from \"./page/main/MainContainer\"\nimport NoticeListContainer from \"./page/boradNotice/NoticeListContainer\"\nimport NoticeDescContainer from \"./page/boradNotice/NoticeDescContainer\"\nfunction App() {\n  return (\n    <BrowserRouter>\n        <Route exact path=\"/\" component={MainContainer} />\n        <Route path=\"/main\" component={MainContainer} />\n        <Route path=\"/notice/list\" component={NoticeListContainer} />\n        <Route path=\"/notice/desc/:id\" component={NoticeDescContainer} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/juri/Documents/cp-dev/src/page/boradNotice/NoticeDescContainer.js",["47","48","49"],"/Users/juri/Documents/cp-dev/src/page/boradNotice/NoticeListContainer.js",["50","51"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './utils/notice.module.scss'\nimport Header from '../../components/molecules/layout/layoutHeader/Header'\n\n\nconst NoticeListContainer = ({}) => {\n    const [list, setList] = useState([]);\n    const [payload, setPayload] = useState({\n        params: {\n            page:1\n        }\n    })\n    \n    const getData = () => {\n        let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc '\n        axios.get(\"http://ec2-3-35-207-154.ap-northeast-2.compute.amazonaws.com/notice\", {\n          \"x-api-key\": key,\n          params:{\n          }\n          })\n          .then( response => {\n           if(response){\n             const { data } = response.data\n             if(response.status === 200){\n                 console.log('TEST',data)\n                 const resData = response.data.data\n                 setList(resData)\n             }\n           }\n          })\n          .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n      }\n    const boardListContent = () => {\n        return list.map((item, idx) => {\n            return (\n                <Link  key={idx} className={`${styles.link_unit} ${styles.notify}`} to={{ pathname: `/notice/desc/${item.id}`, state: list}}>\n                    <span className={`${styles.theme_info}`}>\n                        <span className={`${styles.cont_desc}`}>{item.title}</span>\n                        <span className={`${styles.txt_date}`}>{item.created}</span>\n                    </span>\n                    <span className={`${styles.theme_arr}`}>\n                        <span className={`${styles.ico_snippet} ${styles.ico_arr_r}`}></span>\n                    </span>\n                </Link>\n            )\n        })\n    }  \n    useEffect(() => {\n        getData();\n    },[payload])\n    \n\n    return(\n        <div id=\"cpWrap\" className={`${styles.wrap_cp} ${styles.wrap_notice}`}>\n            <Header/>\n            <main id=\"cpContent\" className={`${styles.section_notice}`}>\n                {list ?\n                    boardListContent()\n                    : <div className=\"info_state\">\n                    <span className=\"txt_state\">목록의 끝입니다.</span>\n                </div>\n                }\n            </main>\n        </div>\n    );\n\n}\n\nexport default NoticeListContainer;","/Users/juri/Documents/cp-dev/src/page/main/MainContainer.js",["52","53","54","55","56","57","58","59"],"import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport PAGECONST from './utils/Constants';\nimport Card from '../../components/molecules/layout/card/Card';\nimport styles from './utils/main.module.scss'\n\nfunction MainContainer({}) { \n    const [paging, setPaging] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const [list, setList] = useState([])\n    const [payload, setPayload] = useState({\n        params: {\n            page: 1,\n            pageCount: PAGECONST.count,\n            totalCount: 0\n        }\n    })\n    /* 타겟 엘리먼트 */\n    const rootRef = useRef(null);\n    const targetRef = useRef(null);\n\n    const getData = () => {\n      let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n      axios.get(\"http://52.78.173.151/boards\", {\n        \"x-api-key\": key,\n        params:{\n          page: payload.params.page,\n          count: payload.params.pageCount\n        }\n        })\n        .then( response => {\n         if(response){\n           const { result, data } = response.data\n           if(result.code === 1){\n              setIsLoading(true)\n              const paging = response.data.paging;\n              const newList = response.data.data;\n              const updateList = list.concat(newList);\n              setList(updateList);\n              setPaging(paging)\n              setIsLoading(false)\n           }\n         }\n        })\n        .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n    }\n    \n\n  const handlerNaxtBtn = () =>{\n    console.log('TEST')\n    const { page } = payload.params;\n    if(Math.ceil(paging.totalCount / paging.count) > payload.params.page){\n      setPayload({\n        params: {\n          ...payload.params,\n          page: page + 1,\n        }\n      })\n    }\n  }\n\n  \n\n  useEffect(() => {\n      getData();\n  },[payload])\n  useEffect(() =>{\n    // console.log('list # ',list)\n    // console.log('paging # ',paging)\n    // console.log('payload # ',payload)\n  },[list, paging])\n\n\n\n// options 설정\nconst options = {\n  root: null, // .container class를 가진 엘리먼트를 root로 설정. null일 경우 브라우저 viewport\n  rootMargin: '10px', // rootMargin을 '10px 10px 10px 10px'로 설정\n  threshold: [0, 0.5, 1] // 타겟 엘리먼트가 교차영역에 진입했을 때, 교차영역에 타켓 엘리먼트의 50%가 있을 때, 교차 영역에 타켓 엘리먼트의 100%가 있을 때 observe가 반응한다.\n}\n\n// IntersectionObserver 생성\nconst io = new IntersectionObserver((entries, observer) => {\n  // IntersectionObserverEntry 객체 리스트와 observer 본인(self)를 받음\n  // 동작을 원하는 것 작성\n  entries.forEach(entry => {\n    // entry와 observer 출력\n    console.log('entry:', entry);\n    console.log('observer:', observer);\n  })\n}, options)\n\n\n  // /* 인터섹션 callback */\n  // const onIntersect = async ([entry], observer) => {\n  //   if (entry.isIntersecting) {\n  //     observer.unobserve(entry.targetRef);\n  //     await getData();\n  //     observer.observe(entry.targetRef);\n  //   }\n  // };\n  // useEffect(() => {\n  //   let observer;\n  //   if (targetRef) {\n  //     observer = new IntersectionObserver(onIntersect, { threshold: 0.5 });\n  //     observer.observe(targetRef);\n  //   }\n  //   return () => observer && observer.disconnect();\n  // }, [targetRef]);\n\n  //   let observer;\n  //   let options = {\n  //     root: null,\n  //     rootMargin: '10px',\n  //     threshold: 0.1\n  //   }\n  //   overserver = new IntersectionObserver(handleIntersect, options)\n  //   observer.observe(boxElement);\n\n  //   function handleIntersect(entries, observer) {\n  //     entries.forEach((entry) => {\n  //       //DOM = entry.target으로 지정하면 해당 요소 관찰\n  //       if (entry.intersectionRatio > prevRatio) {\n  //         entry.target.style.backgroundColor = increasingColor.replace(\"ratio\", entry.intersectionRatio);\n  //       } else {\n  //         entry.target.style.backgroundColor = decreasingColor.replace(\"ratio\", entry.intersectionRatio);\n  //       }\n    \n  //       prevRatio = entry.intersectionRatio;\n  //     });\n  //   }\n\n  //   observerHandler = (entries, observer) => {\n  //     entries.forEach((entry) => {\n  //       console.log(this);\n\n  //       if (entry.isIntersecting) {\n  //         console.log(\"print\");\n  //         const image = entry.target;\n  //         const src = image.dataset.src; // img 태그의 data-lazy에 저장해둔 이미지 경로를 붙여준다.\n  //         image.setAttribute(\"src\", src);\n  //         image.removeAttribute(\"data-src\");\n  //         observer.unobserve(entry.target);\n  //       }\n  //     }, {\n  //       rootMargin: '1px 1px 1px 1px',\n  //       thresholds: [0.7],\n  //     });\n  //   }\n\n  // lazyLoadHandler= () => {\n  //     this.lazyImages = Array.prototype.slice.call(\n  //       // document.body.querySelectorAll(\".image\")\n  //     );\n\n  //     this.intersectionObserver = new IntersectionObserver(this.observerHandler.bind(this), this.options);\n\n  //     this.lazyImages.forEach((item) => this.intersectionObserver.observe(item));\n  //   }\n// ref={rootRef}\n  return (\n    <div className=\"container\">\n      {list.map((el, i) => {\n          return (\n            // <Card className=\"box\" key={i} ref={i == list.length - 1 && !payload.params.totalCount ? targetRef : null} ListData={list} item={el}/>\n            <Card className=\"box\" key={i} ListData={list} item={el}/>\n          );\n        })\n      }\n      {Math.ceil(paging.totalCount / paging.count) > payload.params.page &&\n      <button type=\"button\" className={`${styles.btn_more}`} onClick={handlerNaxtBtn}>더보기</button>\n      }\n      {/* <div ref={targetRef} className=\"spinner\">Loading...</div> */}\n      {/* {isLoading && <p>Loading...</p>} */}\n    </div>\n  );\n}\n\nexport default MainContainer;\n\n\n","/Users/juri/Documents/cp-dev/src/page/main/utils/Constants.js",[],"/Users/juri/Documents/cp-dev/src/components/molecules/layout/card/Card.js",["60","61","62"],"import React, { useState } from 'react';\nimport styles from './card.module.scss'\n\nconst Card = ({ ListData, item }) => {\n    const [list, setList] = useState(item);\n    const imageArea = {\n        background: `url(${list.imageUrl})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: '100% 100%',\n        backgroundPosition: 'center',\n    }\n    return(\n        <div className={`${styles.unit_card}`}>\n            <a href=\"#none\" className={`${styles.link_item}`}>\n                <div className={`${styles.container_thumb}`}>\n                    <div className={`${styles.area_img}`}>\n                        <img src={`${list.imageUrl}`} className={`${styles.img_thumb}`}/>\n                        {/* <span className={`${styles.img_desc}`} style={imageArea}></span> */}\n                    </div>\n                </div>\n                <div className={`${styles.info_desc}`}>\n                    <span className={`${styles.txt_default} ${styles.tit_desc}`}>{list.brandName}</span>\n                    <span className={`${styles.txt_default} ${styles.txt_desc}`}>{list.content}</span>\n                    <span className={`${styles.txt_default} ${styles.txt_desc}`}>{list.majorCategoryName}</span>\n                </div>\n            </a>\n        </div>  \n    );\n}\n\nexport default Card;","/Users/juri/Documents/cp-dev/src/components/molecules/layout/layoutHeader/Header.js",["63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":2,"column":41,"nodeType":"70","messageId":"71","endLine":2,"endColumn":47},{"ruleId":"68","severity":1,"message":"73","line":8,"column":21,"nodeType":"70","messageId":"71","endLine":8,"endColumn":31},{"ruleId":"68","severity":1,"message":"74","line":22,"column":22,"nodeType":"70","messageId":"71","endLine":22,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":34,"column":7,"nodeType":"77","endLine":34,"endColumn":16,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":30,"nodeType":"81","messageId":"82","endLine":8,"endColumn":32},{"ruleId":"68","severity":1,"message":"73","line":10,"column":21,"nodeType":"70","messageId":"71","endLine":10,"endColumn":31},{"ruleId":"68","severity":1,"message":"83","line":1,"column":37,"nodeType":"70","messageId":"71","endLine":1,"endColumn":48},{"ruleId":"79","severity":1,"message":"80","line":7,"column":24,"nodeType":"81","messageId":"82","endLine":7,"endColumn":26},{"ruleId":"68","severity":1,"message":"84","line":9,"column":12,"nodeType":"70","messageId":"71","endLine":9,"endColumn":21},{"ruleId":"68","severity":1,"message":"85","line":19,"column":11,"nodeType":"70","messageId":"71","endLine":19,"endColumn":18},{"ruleId":"68","severity":1,"message":"86","line":20,"column":11,"nodeType":"70","messageId":"71","endLine":20,"endColumn":20},{"ruleId":"68","severity":1,"message":"74","line":33,"column":28,"nodeType":"70","messageId":"71","endLine":33,"endColumn":32},{"ruleId":"75","severity":1,"message":"76","line":66,"column":5,"nodeType":"77","endLine":66,"endColumn":14,"suggestions":"87"},{"ruleId":"68","severity":1,"message":"88","line":83,"column":7,"nodeType":"70","messageId":"71","endLine":83,"endColumn":9},{"ruleId":"68","severity":1,"message":"89","line":5,"column":18,"nodeType":"70","messageId":"71","endLine":5,"endColumn":25},{"ruleId":"68","severity":1,"message":"90","line":6,"column":11,"nodeType":"70","messageId":"71","endLine":6,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":17,"column":25,"nodeType":"93","endLine":17,"endColumn":90},{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'setPayload' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useCallback' is defined but never used.","'isLoading' is assigned a value but never used.","'rootRef' is assigned a value but never used.","'targetRef' is assigned a value but never used.",["97"],"'io' is assigned a value but never used.","'setList' is assigned a value but never used.","'imageArea' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},"Update the dependencies array to be: [getData, payload]",{"range":"101","text":"102"},{"range":"103","text":"102"},[1082,1091],"[getData, payload]",[1813,1822]]