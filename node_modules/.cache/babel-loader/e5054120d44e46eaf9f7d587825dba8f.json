{"ast":null,"code":"var _jsxFileName = \"/Users/we/dev/cp-dev/src/components/molecules/layout/ListView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver'; // import Infinite from './Infinite'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListView({}) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState({});\n  const [list, setList] = useState([]);\n  const [isTotalCount, setIsTotalCount] = useState({});\n  const [payload, setPayload] = useState({\n    params: {\n      pageSize,\n      page: 1\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: rootRef,\n    children: [lists.map((el, i) => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        ref: i == lists.length - 1 && !isTotalCount ? targetRef : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this);\n    }), loading && /*#__PURE__*/_jsxDEV(ListItem, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListView, \"PqTZzIYHBnnYLfmDZSPPCJ6YvaI=\");\n\n_c = ListView;\nexport default ListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"sources":["/Users/we/dev/cp-dev/src/components/molecules/layout/ListView.js"],"names":["React","useState","useEffect","useCallback","useRef","axios","useIntersectionObserver","ListView","isLoading","setIsLoading","list","setList","isTotalCount","setIsTotalCount","payload","setPayload","params","pageSize","page","rootRef","lists","map","el","i","length","targetRef","loading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiDC,MAAjD,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,uBAAP,MAAoC,yCAApC,C,CAEA;;;;AAEA,SAASC,QAAT,CAAkB,EAAlB,EAAsB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC;AACrCe,IAAAA,MAAM,EAAE;AACNC,MAAAA,QADM;AAENC,MAAAA,IAAI,EAAE;AAFA;AAD6B,GAAD,CAAtC;AAOA,sBAII;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAA,eACGC,KAAK,CAACC,GAAN,CAAU,CAACC,EAAD,EAAKC,CAAL,KAAW;AACpB;AAAA;AAAK,QAAA,GAAG,EAAEA,CAAC,IAAIH,KAAK,CAACI,MAAN,GAAe,CAApB,IAAyB,CAACZ,YAA1B,GAAyCa,SAAzC,GAAqD;AAA/D;AAAA;AAAA;AAAA;AAAA;AACC,KAFF,CADH,EAKGC,OAAO,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALd;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ;AAaD;;GAxBMnB,Q;;KAAAA,Q;AA0BT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver'\n\n// import Infinite from './Infinite'\n\nfunction ListView({}) { \n    const [isLoading, setIsLoading] = useState({})\n    const [list, setList] = useState([])\n    const [isTotalCount, setIsTotalCount] = useState({})\n    const [payload, setPayload] = useState({\n      params: {\n        pageSize,\n        page: 1\n      }\n    })\n\n    return (\n      \n\n      \n        <div ref={rootRef}>\n          {lists.map((el, i) => {\n            <div ref={i == lists.length - 1 && !isTotalCount ? targetRef : null}/>\n            })\n          }\n          {loading && <ListItem>Loading...</ListItem>}\n        </div>\n       \n    );\n  }\n\nexport default ListView;\n\n\n"]},"metadata":{},"sourceType":"module"}