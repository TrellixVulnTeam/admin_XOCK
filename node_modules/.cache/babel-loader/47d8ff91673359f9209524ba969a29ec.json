{"ast":null,"code":"var _jsxFileName = \"/Users/we/dev/cp-dev/src/page/main/MainContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport PAGECONST from './utils/Constants';\nimport Card from '../../components/molecules/layout/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainContainer({}) {\n  _s();\n\n  const [paging, setPaging] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [list, setList] = useState([]);\n  const [payload, setPayload] = useState({\n    params: {\n      page: 1,\n      pageCount: PAGECONST.count,\n      totalCount: 0\n    }\n  });\n  const rootRef = useRef();\n  const targetRef = useRef();\n\n  const getData = () => {\n    let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc';\n    axios.get(\"http://52.78.173.151/boards\", {\n      \"x-api-key\": key,\n      params: {\n        page: payload.params.page,\n        count: payload.params.pageCount\n      }\n    }).then(response => {\n      if (response) {\n        const {\n          result,\n          data\n        } = response.data;\n\n        if (result.code === 1) {\n          setIsLoading(true);\n          console.log('response ?', response);\n          console.log('response.data !!', response.data);\n          const paging = response.data.paging;\n          const newList = response.data.data;\n          setList(newList);\n\n          if (list) {\n            const updateList = list.concat(newList);\n            setList(updateList);\n          }\n\n          setPaging(paging);\n          setIsLoading(false);\n        }\n      }\n    }).catch(err => alert(\"글을 가져오는데 실패 했습니다.\"));\n  };\n\n  const handlerNaxtBtn = () => {\n    const {\n      page\n    } = payload.params;\n\n    if (Math.ceil(paging.totalCount / paging.count) > payload.params.page) {\n      setPayload({\n        params: { ...payload.params,\n          page: page + 1\n        }\n      });\n    }\n  }; // const ListCallbackL = (list, observer) => {\n  //   list.forEach(item => {\n  //   });\n  // }\n  // const view = new IntersectionObserver(ListCallbackL,{\n  //   root: rootRef,\n  //   rootMargin: '0px',\n  //   threshold: 0.5\n  // })\n  // view.observe(targetRef);\n\n\n  var io = new IntersectionObserver(entries => {\n    console.log(entries);\n  }, {\n    /* Using default options. Details below */\n  }); // Start observing an element\n\n  io.observe(element);\n  useEffect(() => {\n    getData();\n  }, [payload]);\n  useEffect(() => {\n    console.log('list # ', list);\n    console.log('paging # ', paging);\n    console.log('payload # ', payload);\n  }, [list, paging]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: rootRef,\n    children: [list.map((el, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: el.brandName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this) // <Card ref={i == list.length - 1 && !payload.params.totalCount ? targetRef : null}/>\n      ; // <Card ref={i == list.length - 1 && !payload.params.totalCount ? targetRef : null}/>\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handlerNaxtBtn,\n      children: \"PUSH!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainContainer, \"HjR8pfwHIX/fcmDAq52ZZau3MSA=\");\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/we/dev/cp-dev/src/page/main/MainContainer.js"],"names":["React","useState","useEffect","useCallback","useRef","axios","PAGECONST","Card","MainContainer","paging","setPaging","isLoading","setIsLoading","list","setList","payload","setPayload","params","page","pageCount","count","totalCount","rootRef","targetRef","getData","key","get","then","response","result","data","code","console","log","newList","updateList","concat","catch","err","alert","handlerNaxtBtn","Math","ceil","io","IntersectionObserver","entries","observe","element","map","el","i","brandName"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport PAGECONST from './utils/Constants';\nimport Card from '../../components/molecules/layout/Card'\n\nfunction MainContainer({}) { \n    const [paging, setPaging] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const [list, setList] = useState([])\n    const [payload, setPayload] = useState({\n        params: {\n            page: 1,\n            pageCount: PAGECONST.count,\n            totalCount: 0\n        }\n    })\n    const rootRef = useRef();\n    const targetRef = useRef();\n\n    const getData = () => {\n      let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n      axios.get(\"http://52.78.173.151/boards\", {\n        \"x-api-key\": key,\n        params:{\n          page: payload.params.page,\n          count: payload.params.pageCount\n        }\n        })\n        .then( response => {\n         if(response){\n           const { result, data } = response.data\n           if(result.code === 1){\n                setIsLoading(true)\n                console.log('response ?',response)\n                console.log('response.data !!',response.data)\n                const paging = response.data.paging;\n                const newList = response.data.data;\n                setList(newList);\n                if (list){\n                  const updateList = list.concat(newList);\n                  setList(updateList);\n                } \n                setPaging(paging)\n                setIsLoading(false)\n           }\n         }\n        })\n        .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n    }\n\n\n    const handlerNaxtBtn = () =>{\n      const { page } = payload.params;\n      if(Math.ceil(paging.totalCount / paging.count) > payload.params.page){\n        setPayload({\n          params: {\n            ...payload.params,\n            page: page + 1,\n          }\n        })\n      }\n    }\n\n    // const ListCallbackL = (list, observer) => {\n    //   list.forEach(item => {\n        \n        \n    //   });\n    // }\n    // const view = new IntersectionObserver(ListCallbackL,{\n    //   root: rootRef,\n    //   rootMargin: '0px',\n    //   threshold: 0.5\n    // })\n\n    // view.observe(targetRef);\n\n    var io = new IntersectionObserver(\n      entries => {\n        console.log(entries);\n      },\n      {\n        /* Using default options. Details below */\n      }\n    );\n    // Start observing an element\n    io.observe(element);\n\n    useEffect(() => {\n        getData();\n        \n    },[payload])\n    useEffect(() =>{\n      console.log('list # ',list)\n      console.log('paging # ',paging)\n      console.log('payload # ',payload)\n    },[list, paging])\n\n    return (\n        <div ref={rootRef}>\n          {list.map((el, i) => {\n              return (\n              <div>{el.brandName}</div>\n                // <Card ref={i == list.length - 1 && !payload.params.totalCount ? targetRef : null}/>\n              );\n            // <Card ref={i == list.length - 1 && !payload.params.totalCount ? targetRef : null}/>\n            })\n          }\n          <button type=\"button\" onClick={handlerNaxtBtn}>PUSH!</button>\n          {isLoading && <p>Loading...</p>}\n        </div>\n    );\n  }\n\nexport default MainContainer;\n\n\n"]},"metadata":{},"sourceType":"module"}