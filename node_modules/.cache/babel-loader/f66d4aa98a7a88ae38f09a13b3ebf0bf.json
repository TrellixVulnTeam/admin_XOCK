{"ast":null,"code":"var _jsxFileName = \"/Users/juri/Documents/cp-dev/src/components/molecules/layout/ListView.js\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport InfiniteScroll from '@alexcambose/react-infinite-scroll';\nimport axios from 'axios';\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      skip: 0,\n      perLoad: 10,\n      hasMore: true\n    };\n\n    this.loadMore = () => {\n      const {\n        items,\n        skip,\n        perLoad\n      } = this.state;\n      fetch(`https://jsonplaceholder.typicode.com/posts?_start=${skip}&_limit=${perLoad}`).then(res => res.json()).then(res => {\n        this.setState({\n          items: [...items, ...res],\n          skip: skip + perLoad,\n          hasMore: res.length >= perLoad\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      items,\n      hasMore\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(InifiniteScroll, {\n      hasMore: hasMore,\n      loadMore: this.loadMore,\n      children: items.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: e.title\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ListView;","map":{"version":3,"sources":["/Users/juri/Documents/cp-dev/src/components/molecules/layout/ListView.js"],"names":["React","useState","useEffect","useCallback","useRef","InfiniteScroll","axios","useIntersectionObserver","ListView","Component","state","items","skip","perLoad","hasMore","loadMore","fetch","then","res","json","setState","length","render","map","e","i","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiDC,MAAjD,QAA8D,OAA9D;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,uBAAP,MAAoC,yCAApC;;;AAGA,MAAMC,QAAN,SAAuBC,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACrB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,OAAO,EAAE;AAJH,KADqB;;AAAA,SAQ7BC,QAR6B,GAQlB,MAAM;AACf,YAAM;AAAEJ,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,UAA2B,KAAKH,KAAtC;AACAM,MAAAA,KAAK,CACF,qDAAoDJ,IAAK,WAAUC,OAAQ,EADzE,CAAL,CAGGI,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQC,GAAG,IAAI;AACX,aAAKE,QAAL,CAAc;AACZT,UAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAW,GAAGO,GAAd,CADK;AAEZN,UAAAA,IAAI,EAAEA,IAAI,GAAGC,OAFD;AAGZC,UAAAA,OAAO,EAAEI,GAAG,CAACG,MAAJ,IAAcR;AAHX,SAAd;AAKD,OAVH;AAWD,KArB4B;AAAA;;AAuB7BS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASG,MAAAA;AAAT,QAAqB,KAAKJ,KAAhC;AACA,wBACE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEI,OAA1B;AAAmC,MAAA,QAAQ,EAAE,KAAKC,QAAlD;AAAA,gBACGJ,KAAK,CAACY,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACT;AAAA,kBAAcD,CAAC,CAACE;AAAhB,SAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhC4B;;AAmCjC,eAAejB,QAAf","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport InfiniteScroll from '@alexcambose/react-infinite-scroll';\nimport axios from 'axios'\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver'\n\n\nclass ListView extends Component {\n    state = {\n      items: [],\n      skip: 0,\n      perLoad: 10,\n      hasMore: true,\n    };\n  \n    loadMore = () => {\n      const { items, skip, perLoad } = this.state;\n      fetch(\n        `https://jsonplaceholder.typicode.com/posts?_start=${skip}&_limit=${perLoad}`\n      )\n        .then(res => res.json())\n        .then(res => {\n          this.setState({\n            items: [...items, ...res],\n            skip: skip + perLoad,\n            hasMore: res.length >= perLoad,\n          });\n        });\n    };\n  \n    render() {\n      const { items, hasMore } = this.state;\n      return (\n        <InifiniteScroll hasMore={hasMore} loadMore={this.loadMore}>\n          {items.map((e, i) => (\n            <div key={i}>{e.title}</div>\n          ))}\n        </InifiniteScroll>\n      );\n    }\n  }\n\nexport default ListView;\n\n\n"]},"metadata":{},"sourceType":"module"}