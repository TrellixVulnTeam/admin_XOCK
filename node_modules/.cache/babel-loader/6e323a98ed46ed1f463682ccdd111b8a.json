{"ast":null,"code":"var _jsxFileName = \"/Users/we/dev/cp-dev/src/components/molecules/layout/ListView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver'; // import Infinite from './Infinite'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListView({}) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState({});\n  const [lists, setList] = useState([]);\n  const [isTotalCount, setIsTotalCount] = useState({});\n  const [payload, setPayload] = useState({\n    params: {\n      // pageSize: pageSize,\n      page: 1\n    }\n  });\n  const rootRef = useRef();\n\n  const getData = body => {\n    let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc';\n    axios.get(\"http://52.78.173.151/boards\", {\n      \"x-api-key\": key\n    }, body).then(response => {\n      if (response) {\n        const {\n          result,\n          data\n        } = response.data;\n\n        if (result.code === 1) {}\n      }\n    }).catch(err => alert(\"글을 가져오는데 실패 했습니다.\"));\n  };\n\n  useEffect(() => {\n    getData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: rootRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListView, \"HFTe1wBNgIaS30B5xFFqmVxf2uU=\");\n\n_c = ListView;\nexport default ListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"sources":["/Users/we/dev/cp-dev/src/components/molecules/layout/ListView.js"],"names":["React","useState","useEffect","useCallback","useRef","axios","useIntersectionObserver","ListView","isLoading","setIsLoading","lists","setList","isTotalCount","setIsTotalCount","payload","setPayload","params","page","rootRef","getData","body","key","get","then","response","result","data","code","catch","err","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiDC,MAAjD,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,uBAAP,MAAoC,yCAApC,C,CAEA;;;;AAEA,SAASC,QAAT,CAAkB,EAAlB,EAAsB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,OAAR,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC;AACnCe,IAAAA,MAAM,EAAE;AACN;AACAC,MAAAA,IAAI,EAAE;AAFA;AAD2B,GAAD,CAAtC;AAMA,QAAMC,OAAO,GAAGd,MAAM,EAAtB;;AAEA,QAAMe,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAIC,GAAG,GAAG,0CAAV;AACAhB,IAAAA,KAAK,CAACiB,GAAN,CAAU,6BAAV,EAAyC;AACvC,mBAAaD;AAD0B,KAAzC,EAEKD,IAFL,EAGGG,IAHH,CAGSC,QAAQ,IAAI;AAClB,UAAGA,QAAH,EAAY;AACV,cAAM;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAAmBF,QAAQ,CAACE,IAAlC;;AACA,YAAGD,MAAM,CAACE,IAAP,KAAgB,CAAnB,EAAqB,CAEpB;AACF;AACD,KAVH,EAWGC,KAXH,CAWSC,GAAG,IAAIC,KAAK,CAAC,mBAAD,CAXrB;AAYD,GAdD;;AAeA5B,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO;AACR,GAFQ,CAAT;AAGA,sBACI;AAAK,IAAA,GAAG,EAAED;AAAV;AAAA;AAAA;AAAA;AAAA,UADJ;AASD;;GAvCMX,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver'\n\n// import Infinite from './Infinite'\n\nfunction ListView({}) { \n    const [isLoading, setIsLoading] = useState({})\n    const [lists, setList] = useState([])\n    const [isTotalCount, setIsTotalCount] = useState({})\n    const [payload, setPayload] = useState({\n        params: {\n          // pageSize: pageSize,\n          page: 1\n        }\n    })\n    const rootRef = useRef()\n\n    const getData = (body) => {\n      let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n      axios.get(\"http://52.78.173.151/boards\", {\n        \"x-api-key\": key,\n        }, body)\n        .then( response => {\n         if(response){\n           const { result, data } = response.data\n           if(result.code === 1){\n\n           }\n         }\n        })\n        .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n    }\n    useEffect(() => {\n      getData()\n    })\n    return (\n        <div ref={rootRef}>\n          {/* {lists.map((el, i) => {\n            <div ref={i == lists.length - 1 && !isTotalCount ? targetRef : null}/>\n            })\n          }\n          {loading && <p>Loading...</p>} */}\n        </div>\n    );\n  }\n\nexport default ListView;\n\n\n"]},"metadata":{},"sourceType":"module"}