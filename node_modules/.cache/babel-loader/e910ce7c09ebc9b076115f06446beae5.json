{"ast":null,"code":"var _jsxFileName = \"/Users/juri/Documents/cp-dev/src/components/molecules/layout/ListView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\nimport axios from 'axios';\nimport Card from './Card'; // import Infinite from './Infinite'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListView({}) {\n  _s();\n\n  // instance variable\n  const currentPage = useRef(1);\n  const totalPage = useRef(0); // request state\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); // contents list\n\n  const [images, setImages] = useState([]); // ref\n\n  const rootRef = useRef(null);\n  const targetRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(List, {\n    ref: infiniteRef,\n    children: [items.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: item.value\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)), loading && /*#__PURE__*/_jsxDEV(ListItem, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n} // const ListView= () => {\n//   const getData = (body) => {\n//     let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n//     axios.get(\"http://52.78.173.151/boards\", {\n//       \"x-api-key\": key,\n//       }, body)\n//       .then( res => {\n//         //  if(body.loadMore) setListInfo([...listInfo, ...res.data.listInfo]);\n//         //  else setListInfo(res.data.listInfo)\n//            })\n//       .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n//   }\n//   getData();\n//     return (\n//       <div>\n//         <h2>TITLE</h2>\n//         <Card></Card>\n//       </div>\n//     )\n// }\n\n\n_s(ListView, \"KW4QTW/9hPYzorvnCoF91euh6BM=\");\n\n_c = ListView;\nexport default ListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"sources":["/Users/juri/Documents/cp-dev/src/components/molecules/layout/ListView.js"],"names":["React","useState","useEffect","useInfiniteScroll","axios","Card","ListView","currentPage","useRef","totalPage","loading","setLoading","error","setError","images","setImages","rootRef","targetRef","infiniteRef","items","map","item","value","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;;;AAEA,SAASC,QAAT,CAAkB,EAAlB,EAAsB;AAAA;;AAClB;AACA,QAAMC,WAAW,GAAGC,MAAM,CAAC,CAAD,CAA1B;AACA,QAAMC,SAAS,GAAGD,MAAM,CAAC,CAAD,CAAxB,CAHkB,CAKlB;;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC,CAPkB,CASlB;;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC,CAVkB,CAYlB;;AACA,QAAMe,OAAO,GAAGR,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMS,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAxB;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,GAAG,EAAEU,WAAX;AAAA,eACGC,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAA,gBAA0BA,IAAI,CAACC;AAA/B,OAAeD,IAAI,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAIGb,OAAO,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAIH;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAhDSJ,Q;;KAAAA,Q;AAkDT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\nimport axios from 'axios'\nimport Card from './Card'\n// import Infinite from './Infinite'\n\nfunction ListView({}) {\n    // instance variable\n    const currentPage = useRef(1);\n    const totalPage = useRef(0);\n\n    // request state\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    // contents list\n    const [images, setImages] = useState([]);\n\n    // ref\n    const rootRef = useRef(null);\n    const targetRef = useRef(null);\n    return (\n      <List ref={infiniteRef}>\n        {items.map((item) => (\n          <ListItem key={item.key}>{item.value}</ListItem>\n        ))}\n        {loading && <ListItem>Loading...</ListItem>}\n      </List>\n    );\n  }\n\n\n\n// const ListView= () => {\n\n//   const getData = (body) => {\n//     let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n//     axios.get(\"http://52.78.173.151/boards\", {\n//       \"x-api-key\": key,\n//       }, body)\n//       .then( res => {\n//         //  if(body.loadMore) setListInfo([...listInfo, ...res.data.listInfo]);\n//         //  else setListInfo(res.data.listInfo)\n//            })\n//       .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n//   }\n\n//   getData();\n//     return (\n//       <div>\n//         <h2>TITLE</h2>\n//         <Card></Card>\n//       </div>\n//     )\n// }\n\nexport default ListView;"]},"metadata":{},"sourceType":"module"}