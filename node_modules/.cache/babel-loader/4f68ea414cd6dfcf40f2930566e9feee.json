{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver'; // import Infinite from './Infinite'\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListView({}) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState({});\n  const [list, setList] = useState([]);\n  const [isTotalCount, setIsTotalCount] = useState({});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) // <div ref={rootRef}>\n  //     <div ref={targetRef} />\n  // </div>\n  //   <List ref={infiniteRef}>\n  //     {items.map((item) => (\n  //       <ListItem key={item.key}>{item.value}</ListItem>\n  //     ))}\n  //     {loading && <ListItem>Loading...</ListItem>}\n  //   </List>\n  ;\n}\n\n_s(ListView, \"5SSgvER1w3+ve7+3GkaisToECck=\");\n\n_c = ListView;\nexport default ListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"sources":["/Users/we/dev/cp-dev/src/components/molecules/layout/ListView.js"],"names":["React","useState","useEffect","useCallback","useRef","axios","useIntersectionObserver","ListView","isLoading","setIsLoading","list","setList","isTotalCount","setIsTotalCount"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiDC,MAAjD,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,uBAAP,MAAoC,yCAApC,C,CAEA;;;;;AAEA,SAASC,QAAT,CAAkB,EAAlB,EAAsB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEA,sBACI,qCADJ,CAEI;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AAVA;AAYD;;GAjBMM,Q;;KAAAA,Q;AAmBT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver'\n\n// import Infinite from './Infinite'\n\nfunction ListView({}) { \n    const [isLoading, setIsLoading] = useState({})\n    const [list, setList] = useState([])\n    const [isTotalCount, setIsTotalCount] = useState({})\n\n    return (\n        <></>\n        // <div ref={rootRef}>\n        //     <div ref={targetRef} />\n        // </div>\n    //   <List ref={infiniteRef}>\n    //     {items.map((item) => (\n    //       <ListItem key={item.key}>{item.value}</ListItem>\n    //     ))}\n    //     {loading && <ListItem>Loading...</ListItem>}\n    //   </List>\n    );\n  }\n\nexport default ListView;\n\n\n"]},"metadata":{},"sourceType":"module"}