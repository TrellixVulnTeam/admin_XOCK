{"ast":null,"code":"var _jsxFileName = \"/Users/we/dev/cp-dev/src/page/main/MainContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport PAGECONST from './utils/Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainContainer({}) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState({});\n  const [lists, setList] = useState([]);\n  const [isTotalCount, setIsTotalCount] = useState({});\n  const [payload, setPayload] = useState({\n    params: {\n      pageCount: PAGECONST.count,\n      page: 1\n    }\n  });\n  const rootRef = useRef();\n  const targetRef = useRef();\n\n  const getData = body => {\n    let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc';\n    axios.get(\"http://52.78.173.151/boards\", {\n      \"x-api-key\": key\n    }, body).then(response => {\n      if (response) {\n        const {\n          result,\n          data\n        } = response;\n\n        if (data.result.code === 1) {\n          console.log('data', data);\n        }\n      }\n    }).catch(err => alert(\"글을 가져오는데 실패 했습니다.\"));\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: rootRef,\n    children: [lists.map((el, i) => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        ref: i == lists.length - 1 && !isTotalCount ? targetRef : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    }), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainContainer, \"1fvyOJBUNxygWpX8r6zNPN2dJxs=\");\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/we/dev/cp-dev/src/page/main/MainContainer.js"],"names":["React","useState","useEffect","useCallback","useRef","axios","PAGECONST","MainContainer","isLoading","setIsLoading","lists","setList","isTotalCount","setIsTotalCount","payload","setPayload","params","pageCount","count","page","rootRef","targetRef","getData","body","key","get","then","response","result","data","code","console","log","catch","err","alert","map","el","i","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiDC,MAAjD,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;AAEA,SAASC,aAAT,CAAuB,EAAvB,EAA2B;AAAA;;AAEvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,OAAR,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC;AACnCe,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAEX,SAAS,CAACY,KADf;AAENC,MAAAA,IAAI,EAAE;AAFA;AAD2B,GAAD,CAAtC;AAMA,QAAMC,OAAO,GAAGhB,MAAM,EAAtB;AACA,QAAMiB,SAAS,GAAGjB,MAAM,EAAxB;;AAEA,QAAMkB,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAIC,GAAG,GAAG,0CAAV;AACAnB,IAAAA,KAAK,CAACoB,GAAN,CAAU,6BAAV,EAAyC;AACvC,mBAAaD;AAD0B,KAAzC,EAEKD,IAFL,EAGGG,IAHH,CAGSC,QAAQ,IAAI;AAClB,UAAGA,QAAH,EAAY;AACV,cAAM;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAAmBF,QAAzB;;AACA,YAAGE,IAAI,CAACD,MAAL,CAAYE,IAAZ,KAAqB,CAAxB,EAA0B;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,IAAnB;AACJ;AACF;AACD,KAVH,EAWGI,KAXH,CAWSC,GAAG,IAAIC,KAAK,CAAC,mBAAD,CAXrB;AAYD,GAdD;;AAeAjC,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI;AAAK,IAAA,GAAG,EAAEF,OAAV;AAAA,eACGV,KAAK,CAAC0B,GAAN,CAAU,CAACC,EAAD,EAAKC,CAAL,KAAW;AACpB;AAAA;AAAK,QAAA,GAAG,EAAEA,CAAC,IAAI5B,KAAK,CAAC6B,MAAN,GAAe,CAApB,IAAyB,CAAC3B,YAA1B,GAAyCS,SAAzC,GAAqD;AAA/D;AAAA;AAAA;AAAA;AAAA;AACC,KAFF,CADH,EAKGb,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASD;;GAzCMD,a;;KAAAA,a;AA2CT,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport PAGECONST from './utils/Constants';\n\nfunction MainContainer({}) { \n  \n    const [isLoading, setIsLoading] = useState({})\n    const [lists, setList] = useState([])\n    const [isTotalCount, setIsTotalCount] = useState({})\n    const [payload, setPayload] = useState({\n        params: {\n          pageCount: PAGECONST.count,\n          page: 1\n        }\n    })\n    const rootRef = useRef();\n    const targetRef = useRef();\n\n    const getData = (body) => {\n      let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n      axios.get(\"http://52.78.173.151/boards\", {\n        \"x-api-key\": key,\n        }, body)\n        .then( response => {\n         if(response){\n           const { result, data } = response\n           if(data.result.code === 1){\n                console.log('data',data)\n           }\n         }\n        })\n        .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n    }\n    useEffect(() => {\n      getData()\n    },[])\n    return (\n        <div ref={rootRef}>\n          {lists.map((el, i) => {\n            <div ref={i == lists.length - 1 && !isTotalCount ? targetRef : null}/>\n            })\n          }\n          {isLoading && <p>Loading...</p>}\n        </div>\n    );\n  }\n\nexport default MainContainer;\n\n\n"]},"metadata":{},"sourceType":"module"}