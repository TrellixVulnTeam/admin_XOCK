[{"/Users/we/dev/cp-dev/src/index.js":"1","/Users/we/dev/cp-dev/src/App.js":"2","/Users/we/dev/cp-dev/src/reportWebVitals.js":"3","/Users/we/dev/cp-dev/src/stores/index.js":"4","/Users/we/dev/cp-dev/src/page/boradNotice/NoticeListContainer.js":"5","/Users/we/dev/cp-dev/src/page/boradNotice/NoticeWriteContainer.js":"6","/Users/we/dev/cp-dev/src/page/boradNotice/NoticeDescContainer.js":"7","/Users/we/dev/cp-dev/src/page/main/MainContainer.js":"8","/Users/we/dev/cp-dev/src/stores/viewStore.js":"9","/Users/we/dev/cp-dev/src/library/API.js":"10","/Users/we/dev/cp-dev/src/components/organisms/layoutBody/Main.js":"11","/Users/we/dev/cp-dev/src/components/organisms/layoutHeader/Header.js":"12","/Users/we/dev/cp-dev/src/components/molecules/button/RoundButton.js":"13","/Users/we/dev/cp-dev/src/page/main/utils/Constants.js":"14","/Users/we/dev/cp-dev/src/page/main/MainList.js":"15","/Users/we/dev/cp-dev/src/stores/FetchMore.js":"16","/Users/we/dev/cp-dev/src/page/main/utils/util.js":"17","/Users/we/dev/cp-dev/src/components/molecules/card/Card.js":"18","/Users/we/dev/cp-dev/src/page/main/MainItem.js":"19"},{"size":354,"mtime":1616470965984,"results":"20","hashOfConfig":"21"},{"size":877,"mtime":1616470965976,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1616113025235,"results":"23","hashOfConfig":"21"},{"size":69,"mtime":1616470965988,"results":"24","hashOfConfig":"21"},{"size":2364,"mtime":1616546619444,"results":"25","hashOfConfig":"21"},{"size":3039,"mtime":1616546619444,"results":"26","hashOfConfig":"21"},{"size":2232,"mtime":1616546619443,"results":"27","hashOfConfig":"21"},{"size":1451,"mtime":1616743063852,"results":"28","hashOfConfig":"21"},{"size":0,"mtime":1616470965988,"results":"29","hashOfConfig":"21"},{"size":163,"mtime":1616470965985,"results":"30","hashOfConfig":"21"},{"size":228,"mtime":1616470965980,"results":"31","hashOfConfig":"21"},{"size":627,"mtime":1616546619443,"results":"32","hashOfConfig":"21"},{"size":333,"mtime":1616470965977,"results":"33","hashOfConfig":"21"},{"size":65,"mtime":1616113025235,"results":"34","hashOfConfig":"21"},{"size":391,"mtime":1616742253812,"results":"35","hashOfConfig":"21"},{"size":677,"mtime":1616743082338,"results":"36","hashOfConfig":"21"},{"size":367,"mtime":1616718001949,"results":"37","hashOfConfig":"21"},{"size":1314,"mtime":1616736014207,"results":"38","hashOfConfig":"21"},{"size":1141,"mtime":1616742253812,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"l7bf0r",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},"/Users/we/dev/cp-dev/src/index.js",[],["86","87"],"/Users/we/dev/cp-dev/src/App.js",[],"/Users/we/dev/cp-dev/src/reportWebVitals.js",[],"/Users/we/dev/cp-dev/src/stores/index.js",["88"],"import viewStore from './viewStore';\n\nexport default {\n  viewStore,\n}","/Users/we/dev/cp-dev/src/page/boradNotice/NoticeListContainer.js",[],"/Users/we/dev/cp-dev/src/page/boradNotice/NoticeWriteContainer.js",["89","90","91","92"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API } from '../../library/API'\nimport styles from './utils/notice.module.scss'\nimport Main from '../../components/organisms/layoutBody/Main'\nimport RoundButton from '../../components/molecules/button/RoundButton'\n\n\nconst NoticeWriteContainer = ({ history }) => {\n    const [data, setData] = useState({\n            title: '',\n            content: '',\n            member_id: 1,\n            login_id:'cp',\n            member_name: 'cp'\n    })\n    const [payload, setPayload] = useState({\n        params: {\n            page:1\n        }\n    })\n\n    \n    \n    const updateNotice = (requestData) => {\n        let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n        const headers = {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n            'x-api-key': key\n        }\n        axios.post('http://ec2-3-35-207-154.ap-northeast-2.compute.amazonaws.com/notice',        requestData, {headers: headers})\n        .then(function (response) {\n            if(response){\n                if(response.status === 200){\n                   console.log('response',response)\n                   history.push(\"/notice/list\");\n                }\n            }\n        })\n        .catch(err => alert(\"오류\"))\n    }\n\n\n\n    const onSaveData = async (data, statusKey) => {\n        let response;\n        if(statusKey === 'isSave'){\n            const requestData = {\n                ...data,\n            }\n            response = await updateNotice(requestData)\n        }\n    } \n    \n    useEffect(() => {\n    },[payload])\n    \n    const setDataByKeyValue = (e, name, value) => {\n        let v = value;\n        const updateData = {\n          ...data,\n          [name]: v,\n        };\n        setData(updateData);\n      };\n    return(\n        <Main>\n            <div className=\"area_item\">\n                <label className=\"lab_qna\">제목</label>\n                    <input \n                    id=\"title\" \n                    type=\"text\" \n                    className=\"qna_basic inp_contents\" \n                    maxLength=\"50\" \n                    placeholder=\"제목을 입력하세요\"\n                    onChange={e => {\n                    setDataByKeyValue(e, e.target.id, e.target.value);\n                    }}\n                />\n            </div>{console.log('TEST %%% ',data)}\n            <div className=\"area_item\">\n                <label className=\"lab_qna\">내용</label>\n                <textarea\n                    id=\"content\"\n                    className=\"col-6\"\n                    rows=\"10\"\n                    cols=\"50\"\n                    placeholder=\"내용을 입력하세요\"\n                    onChange={e => {\n                        setDataByKeyValue(e, e.target.id, e.target.value)\n                    }}\n                />\n            </div>\n            <RoundButton title=\"저장\" onClick={() => { onSaveData(data, 'isSave') }}/>\n        </Main>\n    );\n\n}\n\nexport default NoticeWriteContainer;","/Users/we/dev/cp-dev/src/page/boradNotice/NoticeDescContainer.js",["93","94"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport styles from './utils/notice.module.scss'\nimport Header from '../../components/organisms/layoutHeader/Header'\nimport Main from '../../components/organisms/layoutBody/Main'\n\nconst NoticeDescContainer = ({match}) => {\n    const [data, setData] = useState([]);\n    const noticeCode = match.params.id\n    console.log('noticeCode',noticeCode)\n    const payload = useState({\n        params: {\n            id: match.params.id\n        }\n    }) \n    \n    \n    let history = useHistory();\n    const goBack = () => {\n        history.goBack();\n    };\n\n    const getData = () => {\n        let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n        axios.get(`http://ec2-3-35-207-154.ap-northeast-2.compute.amazonaws.com/notice/${noticeCode}`, {\n          \"x-api-key\": key,\n          })\n          .then( response => {\n           if(response){\n             const { data } = response\n             if(response.status === 200){\n                 console.log('response',response)\n                 const resData = response.data\n                 setData(resData)\n             }\n           }\n        })\n        .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n      }\n    useEffect(() => {\n        getData();\n    },[payload])\n\n    return(\n        <div id=\"cpWrap\" className={`${styles.wrap_cp} ${styles.wrap_notice}`}>\n            <Header onClick={goBack}/>\n            <Main id=\"cpContent\" className={`${styles.section_notice}`}>\n                <div className={`${styles.tit_unit}`}>\n                    <span className={`${styles.theme_info}`}>\n                        <span className={`${styles.txt_tit}`}>{data.title}</span>\n                        <span className={`${styles.txt_date}`}>{data.created}</span>\n                    </span>\n                </div>\n                <div className={`${styles.cont_unit}`}>\n                    <span className={`${styles.theme_info}`}>\n                        <span className={`${styles.view_cont}`}>{data.content}</span>\n                    </span>\n                </div>\n            </Main>\n        </div>\n    );\n\n}\n\nexport default NoticeDescContainer;","/Users/we/dev/cp-dev/src/page/main/MainContainer.js",["95","96","97","98","99","100"],"import React, {useState, useEffect, useRef} from 'react'\nimport axios from 'axios'\nimport PAGECONST from './utils/Constants';\nimport Card from '../../components/molecules/card/Card';\nimport styles from './utils/Main.module.scss'\nimport MainList from './MainList';\nimport { getData } from './utils/util';\nimport FetchMore from '../../stores/FetchMore';\n\nconst MainContainer = () => { \n  const [page, setPage] = useState(1);\n  const [list, setList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [payload, setPayload] = useState({\n    params: {\n        page: 1,\n        pageCount: 20,\n        totalCount: 0\n    }\n  })\n  useEffect(async () => {\n    setLoading(true);\n    const list = await getData(page).then(response=>{\n      setPayload({\n        params: {\n          page: response.data.paging.page,\n          pageCount: response.data.paging.count,\n          totalCount: response.data.paging.totalCount,\n        }\n      })\n      return response.data.data;\n    })\n   \n    if(Math.ceil(payload.params.totalCount / payload.params.pageCount) > payload.params.page){\n      setList((prev) => [...prev, ...list]);\n    }\n    \n    setLoading(false);\n  }, [page]);\n  return (\n    <div id={styles.container} className={page === 0 && loading ? \"loading\" : \"\"}>\n      <MainList list={list} />{console.log('page', page)}\n      <FetchMore loading={page !== 0 && loading} setPage={setPage}/>\n    </div>\n  );\n}\n\nexport default MainContainer;\n\n\n","/Users/we/dev/cp-dev/src/stores/viewStore.js",[],"/Users/we/dev/cp-dev/src/library/API.js",[],"/Users/we/dev/cp-dev/src/components/organisms/layoutBody/Main.js",[],"/Users/we/dev/cp-dev/src/components/organisms/layoutHeader/Header.js",[],"/Users/we/dev/cp-dev/src/components/molecules/button/RoundButton.js",[],"/Users/we/dev/cp-dev/src/page/main/utils/Constants.js",[],"/Users/we/dev/cp-dev/src/page/main/MainList.js",[],"/Users/we/dev/cp-dev/src/stores/FetchMore.js",["101","102"],"import React, { useRef, useEffect } from \"react\";\nimport styles from '../page/main/utils/Main.module.scss'\n\nconst FetchMore = ({ loading, setPage, isLast }) => {\n  const fetchMoreTrigger = useRef(null);\n  const fetchMoreObserver = new IntersectionObserver(([{ isIntersecting }]) => {\n    if(isIntersecting) setPage(page => page + 1);\n  });\n  useEffect(() => {\n    fetchMoreObserver.observe(fetchMoreTrigger.current);\n    return () => {\n      fetchMoreObserver.unobserve(fetchMoreTrigger.current);\n    };\n  }, []);\n\n  return (\n    <div\n      id={styles.fetchMore}\n      className={loading ? \"loading\" : \"\"}\n      ref={fetchMoreTrigger}\n    />\n  );\n};\n\nexport default FetchMore;\n","/Users/we/dev/cp-dev/src/page/main/utils/util.js",[],"/Users/we/dev/cp-dev/src/components/molecules/card/Card.js",["103"],"import React, { useState } from 'react';\nimport styles from './card.module.scss'\n\nconst Card = ({ list }) => {\n    const [item, setItem] = useState(list);\n    // const imageArea = {\n    //     background: `url(${list.imageUrl})`,\n    //     backgroundRepeat: 'no-repeat',\n    //     backgroundSize: '100% 100%',\n    //     backgroundPosition: 'center',\n    // }\n    return(\n        <div className={`${styles.unit_card}`}>\n            <a href=\"#none\" className={`${styles.link_item}`}>\n                <div className={`${styles.container_thumb}`}>\n                    <div className={`${styles.area_img}`}>\n                        <img src={`${item.imageUrl}`} className={`${styles.img_thumb}`} alt=\"\"/>\n                        {/* <span className={`${styles.img_desc}`} style={imageArea}></span> */}\n                    </div>\n                </div>\n                <div className={`${styles.info_desc}`}>\n                    <span className={`${styles.txt_default} ${styles.tit_desc}`}>{list.brandName}</span>\n                    <span className={`${styles.txt_default} ${styles.txt_desc}`}>{list.content}</span>\n                    <span className={`${styles.txt_default} ${styles.txt_desc}`}>{list.majorCategoryName}</span>\n                </div>\n            </a>\n        </div>  \n    );\n}\n\nexport default Card;","/Users/we/dev/cp-dev/src/page/main/MainItem.js",["104","105"],"import React from 'react';\nimport {Link} from 'react-router-dom'\nimport styles from \"./utils/List.module.scss\";\n\nconst MainItem = ({ item }) => {\n  const imageArea = {\n      backgroundImage: `url(${item.imageUrl})`,\n  }\n  return(\n    <li>\n      <a className={styles.link_cont}>\n       \n          <div className={styles.wrap_thumb}>\n            <span className={styles.img_thumb} style={imageArea}></span>\n          </div>\n          <div className={`${styles.info_desc}`}>\n            <span className={`${styles.txt_default} ${styles.tit_desc}`}>{item.brandName}</span>\n            <span className={`${styles.txt_default} ${styles.txt_desc}`}>{item.content}</span>\n            <span className={`${styles.txt_default} ${styles.txt_desc}`}>{item.majorCategoryName}</span>\n          </div>\n           {/* <div className=\"no\">{item.brandName}</div> */}\n          {/* <div className=\"content\"> */}\n          {/* <img src={`${item.imageUrl}`} className={styles.img_thumb} alt=\"\"/> */}\n          {/* <div className=\"_id\"></div>\n          <div className=\"text\"></div> */}\n        {/* </div>  */}\n      </a>\n    </li>\n  )\n};\n\nexport default MainItem;\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":3,"column":1,"nodeType":"112","endLine":5,"endColumn":2},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":13},{"ruleId":"113","severity":1,"message":"117","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":14},{"ruleId":"113","severity":1,"message":"118","line":17,"column":21,"nodeType":"115","messageId":"116","endLine":17,"endColumn":31},{"ruleId":"113","severity":1,"message":"119","line":52,"column":13,"nodeType":"115","messageId":"116","endLine":52,"endColumn":21},{"ruleId":"113","severity":1,"message":"120","line":31,"column":22,"nodeType":"115","messageId":"116","endLine":31,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":43,"column":7,"nodeType":"123","endLine":43,"endColumn":16,"suggestions":"124"},{"ruleId":"113","severity":1,"message":"125","line":1,"column":37,"nodeType":"115","messageId":"116","endLine":1,"endColumn":43},{"ruleId":"113","severity":1,"message":"126","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"113","severity":1,"message":"127","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":17},{"ruleId":"113","severity":1,"message":"128","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":12},{"ruleId":"121","severity":1,"message":"129","line":21,"column":13,"nodeType":"130","endLine":39,"endColumn":4},{"ruleId":"121","severity":1,"message":"131","line":39,"column":6,"nodeType":"123","endLine":39,"endColumn":12,"suggestions":"132"},{"ruleId":"121","severity":1,"message":"133","line":12,"column":52,"nodeType":"115","endLine":12,"endColumn":59},{"ruleId":"121","severity":1,"message":"134","line":14,"column":6,"nodeType":"123","endLine":14,"endColumn":8,"suggestions":"135"},{"ruleId":"113","severity":1,"message":"136","line":5,"column":18,"nodeType":"115","messageId":"116","endLine":5,"endColumn":25},{"ruleId":"113","severity":1,"message":"137","line":2,"column":9,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":11,"column":7,"nodeType":"140","endLine":11,"endColumn":39},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'setPayload' is assigned a value but never used.","'response' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'useRef' is defined but never used.","'axios' is defined but never used.","'PAGECONST' is defined but never used.","'Card' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'payload.params.page', 'payload.params.pageCount', and 'payload.params.totalCount'. Either include them or remove the dependency array.",["144"],"The ref value 'fetchMoreTrigger.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'fetchMoreTrigger.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'fetchMoreObserver'. Either include it or remove the dependency array.",["145"],"'setItem' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [getData, payload]",{"range":"152","text":"153"},"Update the dependencies array to be: [page, payload.params.page, payload.params.pageCount, payload.params.totalCount]",{"range":"154","text":"155"},"Update the dependencies array to be: [fetchMoreObserver]",{"range":"156","text":"157"},[1319,1328],"[getData, payload]",[1170,1176],"[page, payload.params.page, payload.params.pageCount, payload.params.totalCount]",[509,511],"[fetchMoreObserver]"]