[{"/Users/juri/Documents/cp-dev/src/index.js":"1","/Users/juri/Documents/cp-dev/src/reportWebVitals.js":"2","/Users/juri/Documents/cp-dev/src/App.js":"3","/Users/juri/Documents/cp-dev/src/page/main/MainContainer.js":"4","/Users/juri/Documents/cp-dev/src/page/main/utils/Constants.js":"5","/Users/juri/Documents/cp-dev/src/components/molecules/layout/card/Card.js":"6","/Users/juri/Documents/cp-dev/src/components/molecules/layout/Infinite.js":"7","/Users/juri/Documents/cp-dev/src/components/molecules/layout/ListView.js":"8","/Users/juri/Documents/cp-dev/src/components/organisms/UseIntersectionObserver.js":"9","/Users/juri/Documents/cp-dev/src/page/boradNotice/NoticeDescContainer.js":"10","/Users/juri/Documents/cp-dev/src/page/boradNotice/NoticeListContainer.js":"11","/Users/juri/Documents/cp-dev/src/components/molecules/layout/layoutHeader/Header.js":"12","/Users/juri/Documents/cp-dev/src/stores/index.js":"13","/Users/juri/Documents/cp-dev/src/stores/viewStore.js":"14","/Users/juri/Documents/cp-dev/src/page/boradNotice/NoticeWriteContainer.js":"15"},{"size":354,"mtime":1616380941000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1615823190000,"results":"18","hashOfConfig":"17"},{"size":865,"mtime":1616384053000,"results":"19","hashOfConfig":"17"},{"size":5836,"mtime":1616337778000,"results":"20","hashOfConfig":"17"},{"size":65,"mtime":1615945864000,"results":"21","hashOfConfig":"17"},{"size":1299,"mtime":1616244608000,"results":"22","hashOfConfig":"17"},{"size":895,"mtime":1616244608000,"results":"23","hashOfConfig":"17"},{"size":2987,"mtime":1615991809000,"results":"24","hashOfConfig":"17"},{"size":532,"mtime":1615901202000,"results":"25","hashOfConfig":"17"},{"size":1978,"mtime":1616329067000,"results":"26","hashOfConfig":"17"},{"size":2385,"mtime":1616329067000,"results":"27","hashOfConfig":"17"},{"size":697,"mtime":1616329067000,"results":"28","hashOfConfig":"17"},{"size":69,"mtime":1616378289000,"results":"29","hashOfConfig":"17"},{"size":0,"mtime":1616384088000,"results":"30","hashOfConfig":"17"},{"size":1970,"mtime":1616384306000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1eblkak",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/juri/Documents/cp-dev/src/index.js",[],["71","72"],"/Users/juri/Documents/cp-dev/src/reportWebVitals.js",[],"/Users/juri/Documents/cp-dev/src/App.js",[],"/Users/juri/Documents/cp-dev/src/page/main/MainContainer.js",["73","74","75","76","77","78","79","80"],"import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport PAGECONST from './utils/Constants';\nimport Card from '../../components/molecules/layout/card/Card';\nimport styles from './utils/main.module.scss'\n\nfunction MainContainer({}) { \n    const [paging, setPaging] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const [list, setList] = useState([])\n    const [payload, setPayload] = useState({\n        params: {\n            page: 1,\n            pageCount: PAGECONST.count,\n            totalCount: 0\n        }\n    })\n    /* 타겟 엘리먼트 */\n    const rootRef = useRef(null);\n    const targetRef = useRef(null);\n\n    const getData = () => {\n      let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n      axios.get(\"http://52.78.173.151/boards\", {\n        \"x-api-key\": key,\n        params:{\n          page: payload.params.page,\n          count: payload.params.pageCount\n        }\n        })\n        .then( response => {\n         if(response){\n           const { result, data } = response.data\n           if(result.code === 1){\n              setIsLoading(true)\n              const paging = response.data.paging;\n              const newList = response.data.data;\n              const updateList = list.concat(newList);\n              setList(updateList);\n              setPaging(paging)\n              setIsLoading(false)\n           }\n         }\n        })\n        .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n    }\n    \n\n  const handlerNaxtBtn = () =>{\n    console.log('TEST')\n    const { page } = payload.params;\n    if(Math.ceil(paging.totalCount / paging.count) > payload.params.page){\n      setPayload({\n        params: {\n          ...payload.params,\n          page: page + 1,\n        }\n      })\n    }\n  }\n\n  \n\n  useEffect(() => {\n      getData();\n  },[payload])\n  useEffect(() =>{\n    // console.log('list # ',list)\n    // console.log('paging # ',paging)\n    // console.log('payload # ',payload)\n  },[list, paging])\n\n\n\n// options 설정\nconst options = {\n  root: null, // .container class를 가진 엘리먼트를 root로 설정. null일 경우 브라우저 viewport\n  rootMargin: '10px', // rootMargin을 '10px 10px 10px 10px'로 설정\n  threshold: [0, 0.5, 1] // 타겟 엘리먼트가 교차영역에 진입했을 때, 교차영역에 타켓 엘리먼트의 50%가 있을 때, 교차 영역에 타켓 엘리먼트의 100%가 있을 때 observe가 반응한다.\n}\n\n// IntersectionObserver 생성\nconst io = new IntersectionObserver((entries, observer) => {\n  // IntersectionObserverEntry 객체 리스트와 observer 본인(self)를 받음\n  // 동작을 원하는 것 작성\n  entries.forEach(entry => {\n    // entry와 observer 출력\n    console.log('entry:', entry);\n    console.log('observer:', observer);\n  })\n}, options)\n\n\n  // /* 인터섹션 callback */\n  // const onIntersect = async ([entry], observer) => {\n  //   if (entry.isIntersecting) {\n  //     observer.unobserve(entry.targetRef);\n  //     await getData();\n  //     observer.observe(entry.targetRef);\n  //   }\n  // };\n  // useEffect(() => {\n  //   let observer;\n  //   if (targetRef) {\n  //     observer = new IntersectionObserver(onIntersect, { threshold: 0.5 });\n  //     observer.observe(targetRef);\n  //   }\n  //   return () => observer && observer.disconnect();\n  // }, [targetRef]);\n\n  //   let observer;\n  //   let options = {\n  //     root: null,\n  //     rootMargin: '10px',\n  //     threshold: 0.1\n  //   }\n  //   overserver = new IntersectionObserver(handleIntersect, options)\n  //   observer.observe(boxElement);\n\n  //   function handleIntersect(entries, observer) {\n  //     entries.forEach((entry) => {\n  //       //DOM = entry.target으로 지정하면 해당 요소 관찰\n  //       if (entry.intersectionRatio > prevRatio) {\n  //         entry.target.style.backgroundColor = increasingColor.replace(\"ratio\", entry.intersectionRatio);\n  //       } else {\n  //         entry.target.style.backgroundColor = decreasingColor.replace(\"ratio\", entry.intersectionRatio);\n  //       }\n    \n  //       prevRatio = entry.intersectionRatio;\n  //     });\n  //   }\n\n  //   observerHandler = (entries, observer) => {\n  //     entries.forEach((entry) => {\n  //       console.log(this);\n\n  //       if (entry.isIntersecting) {\n  //         console.log(\"print\");\n  //         const image = entry.target;\n  //         const src = image.dataset.src; // img 태그의 data-lazy에 저장해둔 이미지 경로를 붙여준다.\n  //         image.setAttribute(\"src\", src);\n  //         image.removeAttribute(\"data-src\");\n  //         observer.unobserve(entry.target);\n  //       }\n  //     }, {\n  //       rootMargin: '1px 1px 1px 1px',\n  //       thresholds: [0.7],\n  //     });\n  //   }\n\n  // lazyLoadHandler= () => {\n  //     this.lazyImages = Array.prototype.slice.call(\n  //       // document.body.querySelectorAll(\".image\")\n  //     );\n\n  //     this.intersectionObserver = new IntersectionObserver(this.observerHandler.bind(this), this.options);\n\n  //     this.lazyImages.forEach((item) => this.intersectionObserver.observe(item));\n  //   }\n// ref={rootRef}\n  return (\n    <div className=\"container\">\n      {list.map((el, i) => {\n          return (\n            // <Card className=\"box\" key={i} ref={i == list.length - 1 && !payload.params.totalCount ? targetRef : null} ListData={list} item={el}/>\n            <Card className=\"box\" key={i} ListData={list} item={el}/>\n          );\n        })\n      }\n      {Math.ceil(paging.totalCount / paging.count) > payload.params.page &&\n      <button type=\"button\" className={`${styles.btn_more}`} onClick={handlerNaxtBtn}>더보기</button>\n      }\n      {/* <div ref={targetRef} className=\"spinner\">Loading...</div> */}\n      {/* {isLoading && <p>Loading...</p>} */}\n    </div>\n  );\n}\n\nexport default MainContainer;\n\n\n","/Users/juri/Documents/cp-dev/src/page/main/utils/Constants.js",[],"/Users/juri/Documents/cp-dev/src/components/molecules/layout/card/Card.js",["81","82","83"],"import React, { useState } from 'react';\nimport styles from './card.module.scss'\n\nconst Card = ({ ListData, item }) => {\n    const [list, setList] = useState(item);\n    const imageArea = {\n        background: `url(${list.imageUrl})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: '100% 100%',\n        backgroundPosition: 'center',\n    }\n    return(\n        <div className={`${styles.unit_card}`}>\n            <a href=\"#none\" className={`${styles.link_item}`}>\n                <div className={`${styles.container_thumb}`}>\n                    <div className={`${styles.area_img}`}>\n                        <img src={`${list.imageUrl}`} className={`${styles.img_thumb}`}/>\n                        {/* <span className={`${styles.img_desc}`} style={imageArea}></span> */}\n                    </div>\n                </div>\n                <div className={`${styles.info_desc}`}>\n                    <span className={`${styles.txt_default} ${styles.tit_desc}`}>{list.brandName}</span>\n                    <span className={`${styles.txt_default} ${styles.txt_desc}`}>{list.content}</span>\n                    <span className={`${styles.txt_default} ${styles.txt_desc}`}>{list.majorCategoryName}</span>\n                </div>\n            </a>\n        </div>  \n    );\n}\n\nexport default Card;","/Users/juri/Documents/cp-dev/src/components/molecules/layout/Infinite.js",[],["84","85"],"/Users/juri/Documents/cp-dev/src/components/molecules/layout/ListView.js",["86","87","88","89","90","91","92"],"import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver';\n\n\n  \n/* fake */\nconst fakeFetch = (delay = 1000) => new Promise(res => setTimeout(res, delay));\n/* 리스트 아이템 */\nconst ListItem = ({ number }) => (\n  <div className=\"ListItem\">\n    <span>{number}</span>\n  </div>\n);\n\nfunction ListView() {\n  /* 아이템 개수와 현재 로딩 상태 */\n  const [state, setState] = useState({ itemCount: 0, isLoading: false });\n  const [paging, setPaging] = useState({})\n  const [list, setList] = useState([])\n  const [payload, setPayload] = useState({\n    params: {\n      page: 1,\n      pageCount: 20,\n      totalCount: 0\n    }\n  })\n  /* fake 비동기 아이템 로드 */\n  const fetchItems = async () => {\n    setState(prev => ({ ...prev, isLoading: true }));\n    await fakeFetch();\n    setState(prev => ({\n      itemCount: prev.itemCount + 10,\n      isLoading: false\n    }));\n  };\n\n  const getData = () => {\n    let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n    axios.get(\"http://52.78.173.151/boards\", {\n      \"x-api-key\": key,\n      params:{\n        page: payload.params.page,\n        count: payload.params.pageCount\n      }\n      })\n      .then( response => {\n       if(response){\n         const { result, data } = response.data\n         if(result.code === 1){\n            // setIsLoading(true)\n            const paging = response.data.paging;\n            const newList = response.data.data;\n            setList(newList);\n            setPaging(paging)\n            // if (list){\n            //   const updateList = list.concat(newList);\n            //   setList(updateList);\n            // } \n            // setPaging(paging)\n            // setIsLoading(false)\n         }\n       }\n      })\n      .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n  }\n  /* 초기 아이템 로딩 */\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  \n\t/* 타겟 엘리먼트 */\n  const target = useRef(null);\n\t/* 인터섹션 callback */\n  const onIntersect = async ([entry], observer) => {\n    if (entry.isIntersecting) {\n      observer.unobserve(entry.target);\n      await fetchItems();\n      observer.observe(entry.target);\n    }\n  };\n  /* 옵저버 등록 */\n  useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, { threshold: 0.5 });\n    observer.observe(target.current);\n    return () => observer.disconnect();\n  }, []);\n  \n  useEffect(() => {\n    getData();\n  },[payload])\n\n  useEffect(() =>{\n    console.log('list # ',list)\n    console.log('paging # ',paging)\n    console.log('payload # ',payload)\n  },[list, paging])\n\n  const { itemCount, isLoading } = state;\n  return (\n    <div>\n      {[...Array(itemCount)].map((_, i) => {\n        return <ListItem key={i} number={i} />;\n      })}\n      <div ref={target} className=\"Loading\">\n        {isLoading && \"Loading...\"}\n      </div>\n    </div>\n  );\n}\n\nexport default ListView;\n\n\n","/Users/juri/Documents/cp-dev/src/components/organisms/UseIntersectionObserver.js",["93"],"import { useEffect } from \"react\";\n\nexport default ({ root, target, onIntersect, threshold = 1.0, rootMargin = \"0px\" }) => {\n  useEffect(\n    () => {\n\n      if (!root) {\n        return;\n      }\n\n      const observer = new IntersectionObserver(onIntersect, {\n        root,\n        rootMargin,\n        threshold,\n      });\n\n      if (!target) {\n        return;\n      }\n\n      observer.observe(target);\n\n      return () => {\n        observer.unobserve(target);\n      };\n    }, [target, root, rootMargin, onIntersect, threshold]\n  );\n};","/Users/juri/Documents/cp-dev/src/page/boradNotice/NoticeDescContainer.js",["94","95","96"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from './utils/notice.module.scss'\nimport Header from '../../components/molecules/layout/layoutHeader/Header'\n\nconst NoticeDescContainer = ({match}) => {\n    const [data, setData] = useState([]);\n    const [payload, setPayload] = useState({\n        params: {\n            id: match.params.id\n        }\n    })\n\n    const getData = (match) => {\n        let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc '\n        axios.get(`http://ec2-3-35-207-154.ap-northeast-2.compute.amazonaws.com/notice/${payload.params.id}`, {\n          \"x-api-key\": key,\n          \n          })\n          .then( response => {\n           if(response){\n             const { data } = response.data\n             if(response.status === 200){\n                 console.log('TEST',response.data)\n                 const resData = response.data\n                 setData(resData)\n             }\n           }\n          })\n          .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n      }\n    useEffect(() => {\n        getData();\n    },[payload])\n\n    return(\n        <div id=\"cpWrap\" className={`${styles.wrap_cp} ${styles.wrap_notice}`}>\n            <Header/>\n            <main id=\"cpContent\" className={`${styles.section_notice}`}>\n                <div className={`${styles.tit_unit}`}>\n                    <span className={`${styles.theme_info}`}>\n                        <span className={`${styles.txt_tit}`}>{data.title}</span>\n                        <span className={`${styles.txt_date}`}>{data.created}</span>\n                    </span>\n                </div>\n                <div className={`${styles.cont_unit}`}>\n                    <span className={`${styles.theme_info}`}>\n                        <span className={`${styles.view_cont}`}>{data.content}</span>\n                    </span>\n                </div>\n            </main>\n        </div>\n    );\n\n}\n\nexport default NoticeDescContainer;","/Users/juri/Documents/cp-dev/src/page/boradNotice/NoticeListContainer.js",["97","98"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './utils/notice.module.scss'\nimport Header from '../../components/molecules/layout/layoutHeader/Header'\n\n\nconst NoticeListContainer = ({}) => {\n    const [list, setList] = useState([]);\n    const [payload, setPayload] = useState({\n        params: {\n            page:1\n        }\n    })\n    \n    const getData = () => {\n        let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc '\n        axios.get(\"http://ec2-3-35-207-154.ap-northeast-2.compute.amazonaws.com/notice\", {\n          \"x-api-key\": key,\n          params:{\n          }\n          })\n          .then( response => {\n           if(response){\n             const { data } = response.data\n             if(response.status === 200){\n                 console.log('TEST',data)\n                 const resData = response.data.data\n                 setList(resData)\n             }\n           }\n          })\n          .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n      }\n    const boardListContent = () => {\n        return list.map((item, idx) => {\n            return (\n                <Link  key={idx} className={`${styles.link_unit} ${styles.notify}`} to={{ pathname: `/notice/desc/${item.id}`, state: list}}>\n                    <span className={`${styles.theme_info}`}>\n                        <span className={`${styles.cont_desc}`}>{item.title}</span>\n                        <span className={`${styles.txt_date}`}>{item.created}</span>\n                    </span>\n                    <span className={`${styles.theme_arr}`}>\n                        <span className={`${styles.ico_snippet} ${styles.ico_arr_r}`}></span>\n                    </span>\n                </Link>\n            )\n        })\n    }  \n    useEffect(() => {\n        getData();\n    },[payload])\n    \n\n    return(\n        <div id=\"cpWrap\" className={`${styles.wrap_cp} ${styles.wrap_notice}`}>\n            <Header/>\n            <main id=\"cpContent\" className={`${styles.section_notice}`}>\n                {list ?\n                    boardListContent()\n                    : <div className=\"info_state\">\n                    <span className=\"txt_state\">목록의 끝입니다.</span>\n                </div>\n                }\n            </main>\n        </div>\n    );\n\n}\n\nexport default NoticeListContainer;","/Users/juri/Documents/cp-dev/src/components/molecules/layout/layoutHeader/Header.js",["99"],"import React, { useState } from 'react';\nimport styles from '../layoutHeader/header.module.scss'\n\nconst Header = ({history}) => {\n\n    const goBack = () => {\n        history.goBack();\n    };\n    return(\n        <header className={`${styles.head_cp} ${styles.head_notice}`}>\n            <div id=\"headInfo\" className={`${styles.head_info} ${styles.head_sub}`}>\n                <button type=\"button\" className=\"link_back\" onClick={goBack}>\n                    <span className=\"ico_snippet ico_arr_b\">뒤로가기</span>\n                </button> \n                <span className=\"sub_title sub_page\">서비스 공지사항</span>\n            </div>\n        </header>\n    );\n\n}\n\nexport default Header;","/Users/juri/Documents/cp-dev/src/stores/index.js",["100"],"/Users/juri/Documents/cp-dev/src/stores/viewStore.js",[],"/Users/juri/Documents/cp-dev/src/page/boradNotice/NoticeWriteContainer.js",["101","102","103","104","105","106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":37,"nodeType":"114","messageId":"115","endLine":1,"endColumn":48},{"ruleId":"116","severity":1,"message":"117","line":7,"column":24,"nodeType":"118","messageId":"119","endLine":7,"endColumn":26},{"ruleId":"112","severity":1,"message":"120","line":9,"column":12,"nodeType":"114","messageId":"115","endLine":9,"endColumn":21},{"ruleId":"112","severity":1,"message":"121","line":19,"column":11,"nodeType":"114","messageId":"115","endLine":19,"endColumn":18},{"ruleId":"112","severity":1,"message":"122","line":20,"column":11,"nodeType":"114","messageId":"115","endLine":20,"endColumn":20},{"ruleId":"112","severity":1,"message":"123","line":33,"column":28,"nodeType":"114","messageId":"115","endLine":33,"endColumn":32},{"ruleId":"124","severity":1,"message":"125","line":66,"column":5,"nodeType":"126","endLine":66,"endColumn":14,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"128","line":83,"column":7,"nodeType":"114","messageId":"115","endLine":83,"endColumn":9},{"ruleId":"112","severity":1,"message":"129","line":5,"column":18,"nodeType":"114","messageId":"115","endLine":5,"endColumn":25},{"ruleId":"112","severity":1,"message":"130","line":6,"column":11,"nodeType":"114","messageId":"115","endLine":6,"endColumn":20},{"ruleId":"131","severity":1,"message":"132","line":17,"column":25,"nodeType":"133","endLine":17,"endColumn":90},{"ruleId":"108","replacedBy":"134"},{"ruleId":"110","replacedBy":"135"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":37,"nodeType":"114","messageId":"115","endLine":1,"endColumn":48},{"ruleId":"112","severity":1,"message":"136","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":31},{"ruleId":"112","severity":1,"message":"137","line":21,"column":19,"nodeType":"114","messageId":"115","endLine":21,"endColumn":29},{"ruleId":"112","severity":1,"message":"123","line":49,"column":26,"nodeType":"114","messageId":"115","endLine":49,"endColumn":30},{"ruleId":"124","severity":1,"message":"138","line":87,"column":6,"nodeType":"126","endLine":87,"endColumn":8,"suggestions":"139"},{"ruleId":"124","severity":1,"message":"125","line":91,"column":5,"nodeType":"126","endLine":91,"endColumn":14,"suggestions":"140"},{"ruleId":"124","severity":1,"message":"141","line":97,"column":5,"nodeType":"126","endLine":97,"endColumn":19,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":3,"column":1,"nodeType":"145","endLine":28,"endColumn":3},{"ruleId":"112","severity":1,"message":"137","line":8,"column":21,"nodeType":"114","messageId":"115","endLine":8,"endColumn":31},{"ruleId":"112","severity":1,"message":"123","line":22,"column":22,"nodeType":"114","messageId":"115","endLine":22,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":34,"column":7,"nodeType":"126","endLine":34,"endColumn":16,"suggestions":"146"},{"ruleId":"116","severity":1,"message":"117","line":8,"column":30,"nodeType":"118","messageId":"119","endLine":8,"endColumn":32},{"ruleId":"112","severity":1,"message":"137","line":10,"column":21,"nodeType":"114","messageId":"115","endLine":10,"endColumn":31},{"ruleId":"112","severity":1,"message":"147","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"148","line":3,"column":1,"nodeType":"145","endLine":5,"endColumn":2},{"ruleId":"112","severity":1,"message":"149","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"150","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"112","severity":1,"message":"151","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":8,"column":31,"nodeType":"118","messageId":"119","endLine":8,"endColumn":33},{"ruleId":"112","severity":1,"message":"152","line":9,"column":12,"nodeType":"114","messageId":"115","endLine":9,"endColumn":16},{"ruleId":"112","severity":1,"message":"137","line":10,"column":21,"nodeType":"114","messageId":"115","endLine":10,"endColumn":31},{"ruleId":"112","severity":1,"message":"153","line":16,"column":11,"nodeType":"114","messageId":"115","endLine":16,"endColumn":19},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'isLoading' is assigned a value but never used.","'rootRef' is assigned a value but never used.","'targetRef' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["156"],"'io' is assigned a value but never used.","'setList' is assigned a value but never used.","'imageArea' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["154"],["155"],"'useIntersectionObserver' is defined but never used.","'setPayload' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onIntersect'. Either include it or remove the dependency array.",["157"],["158"],"React Hook useEffect has a missing dependency: 'payload'. Either include it or remove the dependency array.",["159"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["160"],"'useState' is defined but never used.","Assign object to a variable before exporting as module default","'Link' is defined but never used.","'styles' is defined but never used.","'Header' is defined but never used.","'list' is assigned a value but never used.","'postData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"161","fix":"165"},{"desc":"166","fix":"167"},{"desc":"161","fix":"168"},"Update the dependencies array to be: [getData, payload]",{"range":"169","text":"170"},"Update the dependencies array to be: [onIntersect]",{"range":"171","text":"172"},{"range":"173","text":"170"},"Update the dependencies array to be: [list, paging, payload]",{"range":"174","text":"175"},{"range":"176","text":"170"},[1813,1822],"[getData, payload]",[2354,2356],"[onIntersect]",[2401,2410],[2542,2556],"[list, paging, payload]",[1082,1091]]