{"ast":null,"code":"var _jsxFileName = \"/Users/juri/Documents/cp-dev/src/components/molecules/layout/ListView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\nimport axios from 'axios';\nimport Card from './Card'; // import Infinite from './Infinite'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListView({}) {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState();\n  const [loading, setLoading] = useState(false); /// ...\n\n  const getData = body => {\n    let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc';\n    axios.get(\"http://52.78.173.151/boards\", {\n      \"x-api-key\": key\n    }, body).then(res => {//  if(body.loadMore) setListInfo([...listInfo, ...res.data.listInfo]);\n      //  else setListInfo(res.data.listInfo)\n    }).catch(err => alert(\"글을 가져오는데 실패 했습니다.\"));\n  };\n\n  function handleLoadMore() {\n    setLoading(true); // Some API call to fetch the next page\n\n    loadNextPage(endCursor, pageSize).then(newPage => {\n      setLoading(false);\n      setHasNextPage(newPage.hasNextPage);\n      setItems([...items, newPage.items]);\n    });\n  }\n\n  const infiniteRef = useInfiniteScroll({\n    loading,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer\n  }); // ...\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    ref: infiniteRef,\n    children: [items.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: item.value\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)), loading && /*#__PURE__*/_jsxDEV(ListItem, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n} // const ListView= () => {\n//   const getData = (body) => {\n//     let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n//     axios.get(\"http://52.78.173.151/boards\", {\n//       \"x-api-key\": key,\n//       }, body)\n//       .then( res => {\n//         //  if(body.loadMore) setListInfo([...listInfo, ...res.data.listInfo]);\n//         //  else setListInfo(res.data.listInfo)\n//            })\n//       .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n//   }\n//   getData();\n//     return (\n//       <div>\n//         <h2>TITLE</h2>\n//         <Card></Card>\n//       </div>\n//     )\n// }\n\n\n_s(ListView, \"tYgw3BpJgoZIZjBvChCz933pKBY=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = ListView;\nexport default ListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"sources":["/Users/juri/Documents/cp-dev/src/components/molecules/layout/ListView.js"],"names":["React","useState","useEffect","useInfiniteScroll","axios","Card","ListView","items","setItems","hasNextPage","setHasNextPage","loading","setLoading","getData","body","key","get","then","res","catch","err","alert","handleLoadMore","loadNextPage","endCursor","pageSize","newPage","infiniteRef","onLoadMore","scrollContainer","map","item","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;;;AAEA,SAASC,QAAT,CAAkB,EAAlB,EAAsB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC,CAHkB,CAKlB;;AACA,QAAMY,OAAO,GAAIC,IAAD,IAAU;AACtB,QAAIC,GAAG,GAAG,0CAAV;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAU,6BAAV,EAAyC;AACvC,mBAAaD;AAD0B,KAAzC,EAEKD,IAFL,EAGGG,IAHH,CAGSC,GAAG,IAAI,CACZ;AACA;AACI,KANR,EAOGC,KAPH,CAOSC,GAAG,IAAIC,KAAK,CAAC,mBAAD,CAPrB;AAQH,GAVD;;AAYA,WAASC,cAAT,GAA0B;AACxBV,IAAAA,UAAU,CAAC,IAAD,CAAV,CADwB,CAExB;;AACAW,IAAAA,YAAY,CAACC,SAAD,EAAYC,QAAZ,CAAZ,CAAkCR,IAAlC,CAAwCS,OAAD,IAAa;AAClDd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,cAAc,CAACgB,OAAO,CAACjB,WAAT,CAAd;AACAD,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWmB,OAAO,CAACnB,KAAnB,CAAD,CAAR;AACD,KAJD;AAKD;;AAED,QAAMoB,WAAW,GAAGxB,iBAAiB,CAAC;AACpCQ,IAAAA,OADoC;AAEpCF,IAAAA,WAFoC;AAGpCmB,IAAAA,UAAU,EAAEN,cAHwB;AAIpCO,IAAAA;AAJoC,GAAD,CAArC,CA5BkB,CAmClB;;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,GAAG,EAAEF,WAAX;AAAA,eACGpB,KAAK,CAACuB,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAA,gBAA0BA,IAAI,CAACC;AAA/B,OAAeD,IAAI,CAAChB,GAApB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAIGJ,OAAO,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAIH;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAtESL,Q;UA4BeH,iB;;;KA5BfG,Q;AAwET,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\nimport axios from 'axios'\nimport Card from './Card'\n// import Infinite from './Infinite'\n\nfunction ListView({}) {\n    const [items, setItems] = useState([]);\n    const [hasNextPage, setHasNextPage] = useState();\n    const [loading, setLoading] = useState(false)\n   \n    /// ...\n    const getData = (body) => {\n        let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n        axios.get(\"http://52.78.173.151/boards\", {\n          \"x-api-key\": key,\n          }, body)\n          .then( res => {\n            //  if(body.loadMore) setListInfo([...listInfo, ...res.data.listInfo]);\n            //  else setListInfo(res.data.listInfo)\n               })\n          .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n    }\n   \n    function handleLoadMore() {\n      setLoading(true);\n      // Some API call to fetch the next page\n      loadNextPage(endCursor, pageSize).then((newPage) => {\n        setLoading(false);\n        setHasNextPage(newPage.hasNextPage);\n        setItems([...items, newPage.items]);\n      });\n    }\n   \n    const infiniteRef = useInfiniteScroll({\n      loading,\n      hasNextPage,\n      onLoadMore: handleLoadMore,\n      scrollContainer,\n    });\n   \n    // ...\n   \n    return (\n      <List ref={infiniteRef}>\n        {items.map((item) => (\n          <ListItem key={item.key}>{item.value}</ListItem>\n        ))}\n        {loading && <ListItem>Loading...</ListItem>}\n      </List>\n    );\n  }\n\n\n\n// const ListView= () => {\n\n//   const getData = (body) => {\n//     let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n//     axios.get(\"http://52.78.173.151/boards\", {\n//       \"x-api-key\": key,\n//       }, body)\n//       .then( res => {\n//         //  if(body.loadMore) setListInfo([...listInfo, ...res.data.listInfo]);\n//         //  else setListInfo(res.data.listInfo)\n//            })\n//       .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n//   }\n\n//   getData();\n//     return (\n//       <div>\n//         <h2>TITLE</h2>\n//         <Card></Card>\n//       </div>\n//     )\n// }\n\nexport default ListView;"]},"metadata":{},"sourceType":"module"}