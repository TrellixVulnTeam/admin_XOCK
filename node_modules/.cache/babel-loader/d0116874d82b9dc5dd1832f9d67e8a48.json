{"ast":null,"code":"var _jsxFileName = \"/Users/we/dev/cp-dev/src/components/molecules/layout/ListView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver'; // import Infinite from './Infinite'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListView({}) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState({});\n  const [list, setList] = useState([]);\n  const [isTotalCount, setIsTotalCount] = useState({});\n  const [payload, setPayload] = useState({\n    params: {\n      pageSize,\n      page: 1\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: rootRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: targetRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: i == lists.length - 1 && !isTotalCount ? targetRef : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this) //   <List ref={infiniteRef}>\n  //     {items.map((item) => (\n  //       <ListItem key={item.key}>{item.value}</ListItem>\n  //     ))}\n  //     {loading && <ListItem>Loading...</ListItem>}\n  //   </List>\n  ;\n}\n\n_s(ListView, \"PqTZzIYHBnnYLfmDZSPPCJ6YvaI=\");\n\n_c = ListView;\nexport default ListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"sources":["/Users/we/dev/cp-dev/src/components/molecules/layout/ListView.js"],"names":["React","useState","useEffect","useCallback","useRef","axios","useIntersectionObserver","ListView","isLoading","setIsLoading","list","setList","isTotalCount","setIsTotalCount","payload","setPayload","params","pageSize","page","rootRef","targetRef","i","lists","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiDC,MAAjD,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,uBAAP,MAAoC,yCAApC,C,CAEA;;;;AAEA,SAASC,QAAT,CAAkB,EAAlB,EAAsB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC;AACrCe,IAAAA,MAAM,EAAE;AACNC,MAAAA,QADM;AAENC,MAAAA,IAAI,EAAE;AAFA;AAD6B,GAAD,CAAtC;AAOA,sBACI;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEC;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,GAAG,EAAEC,CAAC,IAAIC,KAAK,CAACC,MAAN,GAAe,CAApB,IAAyB,CAACX,YAA1B,GAAyCQ,SAAzC,GAAqD;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAKI;AACA;AACA;AACA;AACA;AACA;AAVJ;AAYD;;GAvBMb,Q;;KAAAA,Q;AAyBT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport useIntersectionObserver from '../../organisms/UseIntersectionObserver'\n\n// import Infinite from './Infinite'\n\nfunction ListView({}) { \n    const [isLoading, setIsLoading] = useState({})\n    const [list, setList] = useState([])\n    const [isTotalCount, setIsTotalCount] = useState({})\n    const [payload, setPayload] = useState({\n      params: {\n        pageSize,\n        page: 1\n      }\n    })\n\n    return (\n        <div ref={rootRef}>\n            <div ref={targetRef} />\n            <div ref={i == lists.length - 1 && !isTotalCount ? targetRef : null}/>\n        </div>\n        //   <List ref={infiniteRef}>\n        //     {items.map((item) => (\n        //       <ListItem key={item.key}>{item.value}</ListItem>\n        //     ))}\n        //     {loading && <ListItem>Loading...</ListItem>}\n        //   </List>\n    );\n  }\n\nexport default ListView;\n\n\n"]},"metadata":{},"sourceType":"module"}