{"ast":null,"code":"var _jsxFileName = \"/Users/juri/Documents/ex/cp-dev/src/page/main/MainContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport PAGECONST from './utils/Constants';\nimport Card from '../../components/molecules/layout/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainContainer({}) {\n  _s();\n\n  const [paging, setPaging] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [list, setList] = useState([]);\n  const [payload, setPayload] = useState({\n    params: {\n      page: 1,\n      pageCount: PAGECONST.count,\n      totalCount: 0\n    }\n  });\n  const rootRef = useRef(null);\n  const targetRef = useRef(null);\n\n  const getData = () => {\n    let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc';\n    axios.get(\"http://52.78.173.151/boards\", {\n      \"x-api-key\": key,\n      params: {\n        page: payload.params.page,\n        count: payload.params.pageCount\n      }\n    }).then(response => {\n      if (response) {\n        const {\n          result,\n          data\n        } = response.data;\n\n        if (result.code === 1) {\n          setIsLoading(true);\n          const paging = response.data.paging;\n          const newList = response.data.data;\n          const updateList = list.concat(newList);\n          setList(updateList);\n          setPaging(paging);\n          setIsLoading(false);\n        }\n      }\n    }).catch(err => alert(\"글을 가져오는데 실패 했습니다.\"));\n  };\n\n  const handlerNaxtBtn = () => {\n    const {\n      page\n    } = payload.params;\n\n    if (Math.ceil(paging.totalCount / paging.count) > payload.params.page) {\n      setPayload({\n        params: { ...payload.params,\n          page: page + 1\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [payload]);\n  useEffect(() => {\n    console.log('list # ', list);\n    console.log('paging # ', paging);\n    console.log('payload # ', payload);\n  }, [list, paging]);\n  /* 인터섹션 callback */\n\n  const onIntersect = async ([entry], observer) => {\n    if (entry.isIntersecting) {\n      observer.unobserve(entry.target);\n      await fetchItems();\n      observer.observe(entry.target);\n    }\n  };\n  /* 옵저버 등록 */\n\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, {\n      threshold: 0.5\n    });\n    observer.observe(target.current);\n    return () => observer.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: rootRef,\n    children: [list.map((el, i) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"box\",\n        ref: i == list.length - 1 && !payload.params.totalCount ? targetRef : null,\n        ListData: list,\n        item: el\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handlerNaxtBtn,\n      children: \"PUSH!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MainContainer, \"/3sltzyx1bUVoa26reK7/Fur2kw=\");\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/juri/Documents/ex/cp-dev/src/page/main/MainContainer.js"],"names":["React","useState","useEffect","useCallback","useRef","axios","PAGECONST","Card","MainContainer","paging","setPaging","isLoading","setIsLoading","list","setList","payload","setPayload","params","page","pageCount","count","totalCount","rootRef","targetRef","getData","key","get","then","response","result","data","code","newList","updateList","concat","catch","err","alert","handlerNaxtBtn","Math","ceil","console","log","onIntersect","entry","observer","isIntersecting","unobserve","target","fetchItems","observe","IntersectionObserver","threshold","current","disconnect","map","el","i","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport PAGECONST from './utils/Constants';\nimport Card from '../../components/molecules/layout/Card'\n\nfunction MainContainer({}) { \n    const [paging, setPaging] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const [list, setList] = useState([])\n    const [payload, setPayload] = useState({\n        params: {\n            page: 1,\n            pageCount: PAGECONST.count,\n            totalCount: 0\n        }\n    })\n    const rootRef = useRef(null);\n    const targetRef = useRef(null);\n\n    const getData = () => {\n      let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n      axios.get(\"http://52.78.173.151/boards\", {\n        \"x-api-key\": key,\n        params:{\n          page: payload.params.page,\n          count: payload.params.pageCount\n        }\n        })\n        .then( response => {\n         if(response){\n           const { result, data } = response.data\n           if(result.code === 1){\n              setIsLoading(true)\n              const paging = response.data.paging;\n              const newList = response.data.data;\n              const updateList = list.concat(newList);\n              setList(updateList);\n              setPaging(paging)\n              setIsLoading(false)\n           }\n         }\n        })\n        .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n    }\n\n    const handlerNaxtBtn = () =>{\n      const { page } = payload.params;\n      if(Math.ceil(paging.totalCount / paging.count) > payload.params.page){\n        setPayload({\n          params: {\n            ...payload.params,\n            page: page + 1,\n          }\n        })\n      }\n    }\n\n   \n\n    useEffect(() => {\n        getData();\n    },[payload])\n    useEffect(() =>{\n      console.log('list # ',list)\n      console.log('paging # ',paging)\n      console.log('payload # ',payload)\n    },[list, paging])\n\n  \n\t/* 인터섹션 callback */\n  const onIntersect = async ([entry], observer) => {\n    if (entry.isIntersecting) {\n      observer.unobserve(entry.target);\n      await fetchItems();\n      observer.observe(entry.target);\n    }\n  };\n  /* 옵저버 등록 */\n  useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, { threshold: 0.5 });\n    observer.observe(target.current);\n    return () => observer.disconnect();\n  }, []);\n\n    return (\n      <div ref={rootRef}>\n        {list.map((el, i) => {\n            return (\n              <Card className=\"box\" key={i} ref={i == list.length - 1 && !payload.params.totalCount ? targetRef : null} ListData={list} item={el}/>\n            );\n          })\n        }\n        <button type=\"button\" onClick={handlerNaxtBtn}>PUSH!</button>\n        {isLoading && <p>Loading...</p>}\n      </div>\n    );\n  }\n\nexport default MainContainer;\n\n\n"]},"metadata":{},"sourceType":"module"}