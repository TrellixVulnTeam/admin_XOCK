{"ast":null,"code":"var _jsxFileName = \"/Users/we/dev/cp-dev/src/page/main/MainContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport PAGECONST from './utils/Constants';\nimport Card from '../../components/molecules/layout/card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainContainer({}) {\n  _s();\n\n  const [paging, setPaging] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [list, setList] = useState([]);\n  const [payload, setPayload] = useState({\n    params: {\n      page: 1,\n      pageCount: PAGECONST.count,\n      totalCount: 0\n    }\n  });\n  /* 타겟 엘리먼트 */\n\n  const rootRef = useRef(null);\n  const targetRef = useRef(null);\n\n  const getData = () => {\n    let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc';\n    axios.get(\"http://52.78.173.151/boards\", {\n      \"x-api-key\": key,\n      params: {\n        page: payload.params.page,\n        count: payload.params.pageCount\n      }\n    }).then(response => {\n      if (response) {\n        const {\n          result,\n          data\n        } = response.data;\n\n        if (result.code === 1) {\n          setIsLoading(true);\n          const paging = response.data.paging;\n          const newList = response.data.data;\n          const updateList = list.concat(newList);\n          setList(updateList);\n          setPaging(paging);\n          setIsLoading(false);\n        }\n      }\n    }).catch(err => alert(\"글을 가져오는데 실패 했습니다.\"));\n  };\n\n  const handlerNaxtBtn = () => {\n    const {\n      page\n    } = payload.params;\n\n    if (Math.ceil(paging.totalCount / paging.count) > payload.params.page) {\n      setPayload({\n        params: { ...payload.params,\n          page: page + 1\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [payload]);\n  useEffect(() => {// console.log('list # ',list)\n    // console.log('paging # ',paging)\n    // console.log('payload # ',payload)\n  }, [list, paging]); // /* 인터섹션 callback */\n  // const onIntersect = async ([entry], observer) => {\n  //   if (entry.isIntersecting) {\n  //     observer.unobserve(entry.targetRef);\n  //     await handlerNaxtBtn();\n  //     observer.observe(entry.targetRef);\n  //   }\n  // };\n  // /* 옵저버 등록 */\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(onIntersect, { threshold: 0.5 });\n  //   observer.observe(targetRef.current);\n  //   return () => observer.disconnect();\n  // }, []);\n\n  let observer;\n  let options = {\n    root: null,\n    rootMargin: '10px',\n    threshold: 0.1\n  };\n  overserver = new IntersectionObserver(handleIntersect, options);\n  observer.observe(boxElement);\n\n  function handleIntersect(entries, observer) {\n    entries.forEach(entry => {\n      //DOM = entry.target으로 지정하면 해당 요소 관찰\n      if (entry.intersectionRatio > prevRatio) {\n        entry.target.style.backgroundColor = increasingColor.replace(\"ratio\", entry.intersectionRatio);\n      } else {\n        entry.target.style.backgroundColor = decreasingColor.replace(\"ratio\", entry.intersectionRatio);\n      }\n\n      prevRatio = entry.intersectionRatio;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: rootRef,\n    children: [list.map((el, i) => {\n      return (\n        /*#__PURE__*/\n        // <Card className=\"box\" key={i} ref={i == list.length - 1 && !payload.params.totalCount ? targetRef : null} ListData={list} item={el}/>\n        _jsxDEV(Card, {\n          className: \"box\",\n          ListData: list,\n          item: el\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)\n      );\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: targetRef,\n      type: \"button\",\n      onClick: handlerNaxtBtn,\n      children: \"PUSH!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MainContainer, \"HjR8pfwHIX/fcmDAq52ZZau3MSA=\");\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/we/dev/cp-dev/src/page/main/MainContainer.js"],"names":["React","useState","useEffect","useCallback","useRef","axios","PAGECONST","Card","MainContainer","paging","setPaging","isLoading","setIsLoading","list","setList","payload","setPayload","params","page","pageCount","count","totalCount","rootRef","targetRef","getData","key","get","then","response","result","data","code","newList","updateList","concat","catch","err","alert","handlerNaxtBtn","Math","ceil","observer","options","root","rootMargin","threshold","overserver","IntersectionObserver","handleIntersect","observe","boxElement","entries","forEach","entry","intersectionRatio","prevRatio","target","style","backgroundColor","increasingColor","replace","decreasingColor","map","el","i"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react'\nimport axios from 'axios'\nimport PAGECONST from './utils/Constants';\nimport Card from '../../components/molecules/layout/card/Card'\n\nfunction MainContainer({}) { \n    const [paging, setPaging] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const [list, setList] = useState([])\n    const [payload, setPayload] = useState({\n        params: {\n            page: 1,\n            pageCount: PAGECONST.count,\n            totalCount: 0\n        }\n    })\n    /* 타겟 엘리먼트 */\n    const rootRef = useRef(null);\n    const targetRef = useRef(null);\n\n    const getData = () => {\n      let key = '80CFeBE4MD6JmhEfClBx7zqo1eGvwTl5EZgKyMQc'\n      axios.get(\"http://52.78.173.151/boards\", {\n        \"x-api-key\": key,\n        params:{\n          page: payload.params.page,\n          count: payload.params.pageCount\n        }\n        })\n        .then( response => {\n         if(response){\n           const { result, data } = response.data\n           if(result.code === 1){\n              setIsLoading(true)\n              const paging = response.data.paging;\n              const newList = response.data.data;\n              const updateList = list.concat(newList);\n              setList(updateList);\n              setPaging(paging)\n              setIsLoading(false)\n           }\n         }\n        })\n        .catch(err => alert(\"글을 가져오는데 실패 했습니다.\"))\n    }\n\n    const handlerNaxtBtn = () =>{\n      const { page } = payload.params;\n      if(Math.ceil(paging.totalCount / paging.count) > payload.params.page){\n        setPayload({\n          params: {\n            ...payload.params,\n            page: page + 1,\n          }\n        })\n      }\n    }\n\n   \n\n    useEffect(() => {\n        getData();\n    },[payload])\n    useEffect(() =>{\n      // console.log('list # ',list)\n      // console.log('paging # ',paging)\n      // console.log('payload # ',payload)\n    },[list, paging])\n\n  \n\t// /* 인터섹션 callback */\n  // const onIntersect = async ([entry], observer) => {\n  //   if (entry.isIntersecting) {\n  //     observer.unobserve(entry.targetRef);\n  //     await handlerNaxtBtn();\n  //     observer.observe(entry.targetRef);\n  //   }\n  // };\n  // /* 옵저버 등록 */\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(onIntersect, { threshold: 0.5 });\n  //   observer.observe(targetRef.current);\n  //   return () => observer.disconnect();\n  // }, []);\n\n\n  let observer;\n  let options = {\n    root: null,\n    rootMargin: '10px',\n    threshold: 0.1\n  }\n  overserver = new IntersectionObserver(handleIntersect, options)\n  observer.observe(boxElement);\n\n  function handleIntersect(entries, observer) {\n    entries.forEach((entry) => {\n      //DOM = entry.target으로 지정하면 해당 요소 관찰\n      if (entry.intersectionRatio > prevRatio) {\n        entry.target.style.backgroundColor = increasingColor.replace(\"ratio\", entry.intersectionRatio);\n      } else {\n        entry.target.style.backgroundColor = decreasingColor.replace(\"ratio\", entry.intersectionRatio);\n      }\n  \n      prevRatio = entry.intersectionRatio;\n    });\n  }\n\n    return (\n      <div ref={rootRef}>\n        {list.map((el, i) => {\n            return (\n              // <Card className=\"box\" key={i} ref={i == list.length - 1 && !payload.params.totalCount ? targetRef : null} ListData={list} item={el}/>\n              <Card className=\"box\" key={i} ListData={list} item={el}/>\n            );\n          })\n        }\n        <button ref={targetRef} type=\"button\" onClick={handlerNaxtBtn}>PUSH!</button>\n        {isLoading && <p>Loading...</p>}\n      </div>\n    );\n  }\n\nexport default MainContainer;\n\n\n"]},"metadata":{},"sourceType":"module"}